(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    591019,      11425]
NotebookOptionsPosition[    587529,      11369]
NotebookOutlinePosition[    587903,      11385]
CellTagsIndexPosition[    587860,      11382]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8476142784197702`*^9, 3.847614281164003*^9}, 
   3.8476143303750362`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"b6c01683-26b1-4482-bd96-a2bcc81379be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"for", " ", "displaying", " ", "pendulum"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pendulum", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"vk1", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"vk2", "[", "t", "]"}]}], "\[IndentingNewLine]", "}"}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PointSize", "[", ".025", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", 
          RowBox[{"Point", "[", 
           RowBox[{"vk1", "[", "t", "]"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", " ", 
          RowBox[{"Point", "[", 
           RowBox[{"vk2", "[", "t", "]"}], "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "}"}], "/.", "sol"}], "/.", "params"}], " ", 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.847614273444973*^9, 3.847614285381341*^9}, {
  3.8476173862423286`*^9, 3.8476174320808053`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"61e0b5f5-8fb9-49e3-85ab-de9cdce88a15"],

Cell[CellGroupData[{

Cell["Double pendulum model", "Subsection",
 CellChangeTimes->{{3.717318504697794*^9, 3.717318509729301*^9}, {
  3.717320665127475*^9, 3.717320665284671*^9}, {3.717851890156783*^9, 
  3.717851894958394*^9}},ExpressionUUID->"0412f1ee-4917-4a1f-b541-\
60d0aa0214f1"],

Cell[TextData[{
 "The state vector: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], 
       StyleBox[",",
        FontSlant->"Italic"], 
       SubscriptBox["\[Theta]", "2"]}], ")"}], "T"]}], TraditionalForm]],
  FontSlant->"Italic",ExpressionUUID->
  "fb023544-1578-4a96-a979-6de940ba3e15"],
 " - the angular position of the joints\nThe control inputs:  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["u", "1"], 
       StyleBox[",",
        FontSlant->"Italic"], 
       SubscriptBox[
        StyleBox["u",
         FontSlant->"Italic"], "2"]}], ")"}], "T"]}], TraditionalForm]],
  FontSlant->"Italic",ExpressionUUID->
  "aa415e76-20a7-4fa9-b312-14bdb114b151"],
 "- the driving torques at the joints"
}], "Text",
 CellChangeTimes->{{3.717320518423232*^9, 3.7173205260015097`*^9}, {
   3.7173206680478363`*^9, 3.717320685279768*^9}, {3.717320775366974*^9, 
   3.7173207753670177`*^9}, {3.717321166839571*^9, 3.717321167855044*^9}, {
   3.717321215102807*^9, 3.71732121940657*^9}, 3.717851914882493*^9, {
   3.719231496662671*^9, 3.719231581477215*^9}, {3.719286797585395*^9, 
   3.7192868032012167`*^9}, {3.719286851065099*^9, 
   3.719286915081687*^9}},ExpressionUUID->"9381f817-5ec0-4354-97bb-\
979edcebd397"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "vectors"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"vq", "[", "t_", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]1", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]2", "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vu", "[", "t_", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u1", "[", "t", "]"}], ",", 
       RowBox[{"u2", "[", "t", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"pendulum", " ", "parameters"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"g", "\[Rule]", "9.81"}], ",", 
       RowBox[{
        SubscriptBox["m", "1"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["m", "2"], "\[Rule]", "1"}], ",", 
       RowBox[{
        SubscriptBox["l", "1"], "\[Rule]", " ", "1"}], ",", 
       RowBox[{
        SubscriptBox["l", "2"], "\[Rule]", "1"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"first", " ", "link", " ", "end", " ", "position"}], " ", "-", 
     " ", 
     RowBox[{"auxiliary", " ", "for", " ", "animations"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vk1", "[", "t_", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["l", "1"], 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"vq", "[", "t", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["l", "1"]}], 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"vq", "[", "t", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"second", " ", "link", " ", "end", " ", "position", " ", 
      RowBox[{"(", 
       RowBox[{"output", " ", "function"}], ")"}]}], " ", "-", " ", 
     RowBox[{"to", " ", "be", " ", "controlled"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vk2", "[", "t_", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["l", "1"], 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"vq", "[", "t", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "+", 
        RowBox[{
         SubscriptBox["l", "2"], 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"vq", "[", "t", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["l", "1"]}], 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"vq", "[", "t", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "-", 
        RowBox[{
         SubscriptBox["l", "2"], 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"vq", "[", "t", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"dynamics", " ", "equatations"}], " ", "-", " ", "components"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mQ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["m", "1"], "+", 
            SubscriptBox["m", "2"]}], ")"}], 
          SuperscriptBox[
           SubscriptBox["l", "1"], "2"]}], ",", 
         RowBox[{
          SubscriptBox["m", "2"], 
          SubscriptBox["l", "1"], 
          SubscriptBox["l", "2"], 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"vq", "[", "t", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"vq", "[", "t", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["m", "2"], 
          SubscriptBox["l", "1"], 
          SubscriptBox["l", "2"], 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"vq", "[", "t", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"vq", "[", "t", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{
          SubscriptBox["m", "2"], 
          SuperscriptBox[
           SubscriptBox["l", "1"], "2"]}]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"mB", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["m", "2"], 
          SubscriptBox["l", "1"], 
          SubscriptBox["l", "2"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"vq", "'"}], "[", "t", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}], "2"], 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"vq", "[", "t", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"vq", "[", "t", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "+", 
         RowBox[{"g", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["m", "1"], "+", 
            SubscriptBox["m", "2"]}], ")"}], 
          SubscriptBox["l", "1"], 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"vq", "[", "t", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["m", "2"]}], 
          SubscriptBox["l", "1"], 
          SubscriptBox["l", "2"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"vq", "'"}], "[", "t", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], "2"], 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"vq", "[", "t", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"vq", "[", "t", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "+", 
         RowBox[{"g", " ", 
          SubscriptBox["m", "2"], 
          SubscriptBox["l", "2"], 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"vq", "[", "t", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "}"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"mQ", "//", "MatrixForm"}], "    ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "display"}], " ", "*)"}], "\n", 
   RowBox[{"mB", "//", "MatrixForm"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"the", " ", "equations"}], " ", "-", " ", 
     RowBox[{"to", " ", "be", " ", "simulated"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqns", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"mQ", ".", 
        RowBox[{
         RowBox[{"vq", "''"}], "[", "t", "]"}]}], "+", "mB"}], "==", 
      RowBox[{"vu", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Map", "[", 
    RowBox[{"MatrixForm", ",", "eqns", ",", "1"}], "]"}], "   ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "display"}], " ", "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.716113077772964*^9, 3.7161131053374233`*^9}, {
   3.71629150839826*^9, 3.716291538367016*^9}, {3.716635264442958*^9, 
   3.716635268063497*^9}, {3.7166354531953573`*^9, 3.716635563884454*^9}, {
   3.716635612024973*^9, 3.716635649761747*^9}, {3.7166366365737534`*^9, 
   3.7166366612346287`*^9}, {3.717146377539042*^9, 3.717146468885425*^9}, {
   3.717164369287184*^9, 3.7171644926207647`*^9}, {3.71716455207098*^9, 
   3.717164646127008*^9}, {3.717164683973415*^9, 3.7171647471423903`*^9}, {
   3.7171655272177*^9, 3.717165529630464*^9}, {3.7171658372704287`*^9, 
   3.717165900295257*^9}, {3.717309541785561*^9, 3.717309553427052*^9}, {
   3.717309604963059*^9, 3.717309653791027*^9}, {3.717309702465728*^9, 
   3.7173097266386843`*^9}, {3.717318171175213*^9, 3.717318231034327*^9}, {
   3.717318275894413*^9, 3.717318295928872*^9}, {3.717318392511983*^9, 
   3.7173184207602167`*^9}, {3.717319137369543*^9, 3.7173193652928753`*^9}, 
   3.717325595001597*^9, {3.717325717116653*^9, 3.7173257310252934`*^9}, {
   3.717829232222187*^9, 3.717829237477491*^9}, {3.717829473612962*^9, 
   3.717829479342431*^9}, {3.717851922383811*^9, 3.717851944449869*^9}, {
   3.717852030518997*^9, 3.717852103582632*^9}, {3.717852140381339*^9, 
   3.717852160528508*^9}, {3.717852200985468*^9, 3.717852224615305*^9}, {
   3.719230841911601*^9, 3.719231054738508*^9}, {3.719231102178603*^9, 
   3.7192313192839746`*^9}, {3.7192313761763783`*^9, 
   3.7192313765842037`*^9}, {3.7192314081887407`*^9, 3.719231479494794*^9}, {
   3.71923154770265*^9, 3.719231548297187*^9}, {3.719231588260778*^9, 
   3.719231635998782*^9}, {3.719231667552891*^9, 3.71923174736522*^9}, {
   3.719231816620851*^9, 3.719231896018841*^9}, {3.71923192836368*^9, 
   3.7192320556302853`*^9}, {3.7192320894560328`*^9, 3.719232238013698*^9}, {
   3.719232302818242*^9, 3.719232360898911*^9}, {3.719232402023178*^9, 
   3.7192324139755487`*^9}, {3.719232446262272*^9, 3.719232691564599*^9}, {
   3.7192895538099213`*^9, 3.71928955732771*^9}, {3.719289854081993*^9, 
   3.719289856777945*^9}, {3.719319515975297*^9, 3.719319567533329*^9}, {
   3.7193208487364597`*^9, 3.719320852264059*^9}, {3.719323393495885*^9, 
   3.719323394652207*^9}, 3.8477098476594677`*^9},
 Background->RGBColor[1., 1., 0.85],
 CellLabel->"In[2]:=",ExpressionUUID->"be403696-b516-48f0-a659-99797dce952d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SubsuperscriptBox["l", "1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["m", "1"], "+", 
         SubscriptBox["m", "2"]}], ")"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
         RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "1"], " ", 
       SubscriptBox["l", "2"], " ", 
       SubscriptBox["m", "2"]}]},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
         RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "1"], " ", 
       SubscriptBox["l", "2"], " ", 
       SubscriptBox["m", "2"]}], 
      RowBox[{
       SubsuperscriptBox["l", "1", "2"], " ", 
       SubscriptBox["m", "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.719232115012395*^9, 3.71923214562262*^9, 3.719232185970615*^9, {
   3.7192322177992153`*^9, 3.719232238967141*^9}, 3.719232307119412*^9, {
   3.7192323457657547`*^9, 3.719232387903077*^9}, 3.7192325352588863`*^9, {
   3.719232654744944*^9, 3.719232664240924*^9}, 3.719232715556931*^9, 
   3.719234895701304*^9, 3.71928956944025*^9, 3.7192898599578123`*^9, {
   3.719289893060258*^9, 3.719289901605443*^9}, 3.719319581663579*^9, 
   3.719323079582531*^9, 3.8476137330327673`*^9, 3.8476143546829605`*^9, 
   3.8476207067812405`*^9, 3.847620938448098*^9, {3.8476211071891403`*^9, 
   3.84762111072823*^9}, 3.847621365002473*^9, {3.8477098371389484`*^9, 
   3.847709849216032*^9}, 3.847709980144334*^9, 3.8477101268229785`*^9, 
   3.847774723161237*^9, 3.8477747732865543`*^9},
 CellLabel->
  "Out[9]//MatrixForm=",ExpressionUUID->"cc4320ad-b370-42d4-8045-\
e0b7be1cbdc8"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"g", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "1"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["m", "1"], "+", 
          SubscriptBox["m", "2"]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["l", "1"], " ", 
        SubscriptBox["l", "2"], " ", 
        SubscriptBox["m", "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}]}]},
     {
      RowBox[{
       RowBox[{"g", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "2"], " ", 
        SubscriptBox["m", "2"]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["l", "1"], " ", 
        SubscriptBox["l", "2"], " ", 
        SubscriptBox["m", "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.719232115012395*^9, 3.71923214562262*^9, 3.719232185970615*^9, {
   3.7192322177992153`*^9, 3.719232238967141*^9}, 3.719232307119412*^9, {
   3.7192323457657547`*^9, 3.719232387903077*^9}, 3.7192325352588863`*^9, {
   3.719232654744944*^9, 3.719232664240924*^9}, 3.719232715556931*^9, 
   3.719234895701304*^9, 3.71928956944025*^9, 3.7192898599578123`*^9, {
   3.719289893060258*^9, 3.719289901605443*^9}, 3.719319581663579*^9, 
   3.719323079582531*^9, 3.8476137330327673`*^9, 3.8476143546829605`*^9, 
   3.8476207067812405`*^9, 3.847620938448098*^9, {3.8476211071891403`*^9, 
   3.84762111072823*^9}, 3.847621365002473*^9, {3.8477098371389484`*^9, 
   3.847709849216032*^9}, 3.847709980144334*^9, 3.8477101268229785`*^9, 
   3.847774723161237*^9, 3.847774773322785*^9},
 CellLabel->
  "Out[10]//MatrixForm=",ExpressionUUID->"b40de057-b2fd-4398-8dcb-\
32f2ae2c0319"],

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        RowBox[{"g", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["m", "1"], "+", 
           SubscriptBox["m", "2"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SubscriptBox["l", "2"], " ", 
         SubscriptBox["m", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         SubsuperscriptBox["l", "1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["m", "1"], "+", 
           SubscriptBox["m", "2"]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SubscriptBox["l", "2"], " ", 
         SubscriptBox["m", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"g", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "2"], " ", 
         SubscriptBox["m", "2"]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SubscriptBox["l", "2"], " ", 
         SubscriptBox["m", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SubscriptBox["l", "2"], " ", 
         SubscriptBox["m", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         SubsuperscriptBox["l", "1", "2"], " ", 
         SubscriptBox["m", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "\[Equal]", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{"u1", "[", "t", "]"}]},
       {
        RowBox[{"u2", "[", "t", "]"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Output",
 CellChangeTimes->{
  3.719232115012395*^9, 3.71923214562262*^9, 3.719232185970615*^9, {
   3.7192322177992153`*^9, 3.719232238967141*^9}, 3.719232307119412*^9, {
   3.7192323457657547`*^9, 3.719232387903077*^9}, 3.7192325352588863`*^9, {
   3.719232654744944*^9, 3.719232664240924*^9}, 3.719232715556931*^9, 
   3.719234895701304*^9, 3.71928956944025*^9, 3.7192898599578123`*^9, {
   3.719289893060258*^9, 3.719289901605443*^9}, 3.719319581663579*^9, 
   3.719323079582531*^9, 3.8476137330327673`*^9, 3.8476143546829605`*^9, 
   3.8476207067812405`*^9, 3.847620938448098*^9, {3.8476211071891403`*^9, 
   3.84762111072823*^9}, 3.847621365002473*^9, {3.8477098371389484`*^9, 
   3.847709849216032*^9}, 3.847709980144334*^9, 3.8477101268229785`*^9, 
   3.847774723161237*^9, 3.847774773324478*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"765cee89-3a61-4b86-8fe7-78d6128cc1ae"]
}, Open  ]],

Cell["SIMULATION FOR U INPUT", "Text",
 CellChangeTimes->{{3.717320518423232*^9, 3.7173205260015097`*^9}, {
   3.7173206680478363`*^9, 3.717320685279768*^9}, {3.717320775366974*^9, 
   3.7173207753670177`*^9}, {3.717321166839571*^9, 3.717321167855044*^9}, {
   3.717321215102807*^9, 3.71732121940657*^9}, 3.717851914882493*^9, {
   3.719231496662671*^9, 3.719231581477215*^9}, {3.719232808101083*^9, 
   3.719232822945664*^9}, {3.847617709392401*^9, 
   3.8476177405269394`*^9}},ExpressionUUID->"4fa597a2-9044-440a-bfc1-\
809a88afbc62"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"some", " ", "initial", " ", "conditions"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ics", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]1", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"Pi", "/", "2"}]}], ",", 
       RowBox[{
        RowBox[{"\[Theta]2", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]2", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"temporarily", " ", "with", " ", "no", " ", "controls"}], " ", 
     "-", " ", 
     RowBox[{
     "observe", " ", "the", " ", "behavior", " ", "with", " ", "different", 
      " ", "constat", " ", "controls"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"set", " ", "of", " ", "\"\<nice\>\"", " ", "controls", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["u", "1"], ",", 
         SubscriptBox["u", "2"]}], ")"}]}], "=", 
      RowBox[{"(", 
       RowBox[{"5", ",", "0"}], ")"}]}], ",", 
     RowBox[{"(", 
      RowBox[{"15", ",", "0"}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{"20", ",", "0"}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{"0", ",", "5"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"contr", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"u1", "[", "t", "]"}], "\[Rule]", "20"}], ",", 
       RowBox[{
        RowBox[{"u2", "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"u1", " ", "rusza", " ", "czerwon\:0105", " ", "kulk\:0105"}], 
     ",", " ", 
     RowBox[{"u2", " ", "rusza", " ", "niebiesk\:0105", " ", 
      RowBox[{"(", 
       RowBox[{"do", " ", "g\[OAcute]ry"}], ")"}]}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"solve", " ", "and", " ", "display"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmin", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"First", "[", 
      RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"eqns", ",", "ics"}], "}"}], "/.", "params"}], "/.", 
         "contr"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"vq", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"vq", "'"}], "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)'\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)'\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Animate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pendulum", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "True"}]}], "\[IndentingNewLine]", "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "tmin", ",", " ", "tmax", ",", " ", ".025"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AnimationRate", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.716113077772964*^9, 3.7161131053374233`*^9}, {
   3.71629150839826*^9, 3.716291538367016*^9}, {3.716635264442958*^9, 
   3.716635268063497*^9}, {3.7166354531953573`*^9, 3.716635563884454*^9}, {
   3.716636609996169*^9, 3.71663661102236*^9}, {3.7171442152844753`*^9, 
   3.717144353007221*^9}, {3.717144424434321*^9, 3.717144494655274*^9}, {
   3.717146233623519*^9, 3.717146239582518*^9}, {3.717164229875228*^9, 
   3.7171642349272823`*^9}, {3.717164286516508*^9, 3.717164322800536*^9}, {
   3.7172082221956863`*^9, 3.717208255434268*^9}, {3.717208354802309*^9, 
   3.717208369391427*^9}, {3.717245331492174*^9, 3.717245359834918*^9}, {
   3.717306893248913*^9, 3.7173068966861553`*^9}, {3.717307033905727*^9, 
   3.717307095653658*^9}, {3.717310204826371*^9, 3.717310245234131*^9}, {
   3.7173214674043903`*^9, 3.717321469438703*^9}, 3.7178295938008432`*^9, {
   3.719232857882083*^9, 3.719232959584692*^9}, {3.719232992992176*^9, 
   3.719233082246705*^9}, {3.7192332169343863`*^9, 3.7192332644507837`*^9}, {
   3.7192350971874332`*^9, 3.7192352384976892`*^9}, {3.719235674302458*^9, 
   3.7192357345728416`*^9}, 3.7192357762469063`*^9, {3.7192358081451473`*^9, 
   3.719235836964118*^9}, 3.7192358865094967`*^9, {3.719235935197735*^9, 
   3.719235937897976*^9}, {3.719235986976079*^9, 3.719235987373907*^9}, {
   3.719282862685137*^9, 3.7192829781477833`*^9}, 3.719285085199452*^9, {
   3.719285526284843*^9, 3.719285536649469*^9}, {3.847612752637898*^9, 
   3.84761278798988*^9}, {3.8476176391403327`*^9, 3.847617670714178*^9}, 
   3.847620728134801*^9, {3.847620984859049*^9, 3.847621002903714*^9}, {
   3.8477098578708754`*^9, 3.8477098926885877`*^9}, {3.8477099270364933`*^9, 
   3.847709958896118*^9}, {3.847709990149674*^9, 3.847710002172995*^9}, {
   3.84771015922302*^9, 3.8477101969549847`*^9}, {3.847774830258522*^9, 
   3.847774862343218*^9}, {3.847775339169561*^9, 3.8477753459024057`*^9}, {
   3.847775379184155*^9, 3.847775397469614*^9}, {3.847775442090743*^9, 
   3.847775444788576*^9}, {3.84777581676335*^9, 3.8477759024928637`*^9}, {
   3.847778756263069*^9, 3.847778757012055*^9}, {3.847778787862565*^9, 
   3.847778788863542*^9}},
 Background->RGBColor[1., 1., 0.85],
 CellLabel->
  "In[914]:=",ExpressionUUID->"3b850e55-a280-4a92-8e37-c6146f273420"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RZU/HoeXU0r01VUaCo/YPDE5HYf/AUjwERQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$44020#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
bz94vLkVDQ3rp3YODwmgOzY/whkdDf8D1gqHwQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$44020#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 20}, {0., 688.6356638137162}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(2\\)]\\)\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7192330780972767`*^9, 3.719233092874982*^9}, 
   3.719233225705411*^9, 3.719233266804435*^9, 3.7192351048971643`*^9, 
   3.719235159449831*^9, {3.719235228375042*^9, 3.71923523952286*^9}, {
   3.719235677101577*^9, 3.7192357353154583`*^9}, 3.719235777101623*^9, {
   3.719235809114588*^9, 3.7192358381321383`*^9}, 3.719235887723482*^9, 
   3.719235938864821*^9, 3.7192359896969967`*^9, 3.719289582971943*^9, 
   3.719289907612834*^9, 3.719320509363595*^9, 3.8476127976422944`*^9, 
   3.8476137355974474`*^9, {3.8476176404982443`*^9, 3.847617671403333*^9}, 
   3.8476207090048666`*^9, {3.847620940839336*^9, 3.8476209484576254`*^9}, {
   3.847620986774482*^9, 3.847621003454749*^9}, 3.847621115362403*^9, 
   3.8476213684353514`*^9, {3.847709834689514*^9, 3.847709850967513*^9}, {
   3.847709920205048*^9, 3.847710002991678*^9}, 3.847710129400318*^9, 
   3.8477101993780403`*^9, {3.847774726198639*^9, 3.8477747771498547`*^9}, {
   3.847774811177125*^9, 3.84777486322458*^9}, {3.8477753401863213`*^9, 
   3.847775346618228*^9}, {3.847775385774832*^9, 3.847775398089085*^9}, 
   3.8477754464063053`*^9, {3.847775804560273*^9, 3.847775864424695*^9}, 
   3.847778636199127*^9, 3.847778757906458*^9, 3.8477787897741632`*^9},
 CellLabel->
  "Out[919]=",ExpressionUUID->"3729b3f5-5aee-49b0-ab96-6fb73af5c7b1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OcYMmkdgSKMdE8xLhNy3ZjEjycbXJY2HGd+cfI7zvmOGk+HEz9YaFgiHPWB/
0cuMRwnzQpkGrCCuMKQFTjCjrXKIu76YFZlj+QX1LCxg9KtsLrvLBtsz021R
5ixw7s1OnmjmQGgR4a3sxAJra6Pkd9s5ce39pZEuTxYcCuiKW/jFiVlZoz/a
4SzQCNH7HqfDjeyqE3JjhSxI1NZJbBngxZvh9uLLFSxgeFO6tJjFh19c8sbW
DSxIeKrbv8GDH87bGp1vDLDgRMLa2PcDAlj6zX/ETZQVFs7ePrFSJMjL+K+t
ybPiUV8w86lkElzsys+V6LKiiNmnOZBJCHfSvLI5NrJCvE/ny+ovIbhp5zVW
n2HF1bPj693/iaAkUE9SfY4V3z2jZ30uSaI7JS6/e5UVrHcFnXS0pMDy9KNW
PA8bVPo8o8pbpeDNesz2qzIbSmIDOp7yyoDjVv2+LF82PD1cVlCQIQv9NyKL
dvvYEF8i2y4qRYHvbMCpn1FsKB1374wKpuCJFU/mxgw2LIk8VFJkpWJwjy/l
7y02KFiWzaRtooIn+WFR4UM2WNst/gzMosK/172GuZUNgZyev5al5cB1/ev+
sM9syArdzOTuJYcy71DpgTE2+BycJrIvysFb8m/zhl9sELTYbMZdIwfmnoSo
54zsyNR6X/XsmxyKrwqrqPCzI9SiuO0hlzzct+V9zJBmh9Vd7b2T8vJYEdc6
y6zGjmXxxhPr9eWR3/1cP8yYHa75lh53jeWx4Yrj0Bc7drzZaWnfqi2PX1u7
Uje4sUOFYbD+pKQ8bojtJJ7vYEebNud/SQtysP80Pa28nx0xEhUXXtXJYSYz
+kZGNDu4/jlkyZyQQ6YnuzNzIjtqu7CvUFkOVqLpfw5msKOk5pjlg2oqxj5Q
Cr/cYkdTjMXNpzZUXMwo8dzwkB2mDmMOVx9TYORhxvr8JTtqInYSMYIUfBFu
fKzcwo6t52vb6ivJSOja4p/RzY4id6ESO00Z6KQPCjCPsSOvWrfizUkpdG/Z
X3Nwnh3yxWGCiuUSUOmMl97Ax4Gjst6v3NpE0J4m1FIpxYGfZ4+yTlYJIdIt
N0pZlQM/dINaj18VxJv3lR+Z7DhQPvR6fYI7F4Lbp1IrozjQ1dyZ5hQ4Q5BS
owjlBA58l6qXDT/ygc5T2GbS0zmgGncq4QdnZw13m6zzwVIOxJJ6ol6ZLteU
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
usLAc/1fHRu0DOAat/z7l+sMXGA08MepfKxc99HLvpIBz8g720Pm2yPAMv9u
xR3i/bO+2hGjzghRC1Rbdp8B+vyKVV9eumHTnErczkcMyF30NWXvckPUh+6R
948ZsBfrPf+O4YyYu3nueMJASvv0i9UGdjiQHXC7uJGB1XcKmBIilji2U0Vl
8UsGvjc3pIU76CLZq/vIltcMCN5iPPK+roZT2nmDr9sYSCANUM0C1JEjGeCi
28HAkd6a5tPzgHNjyrdy3hPxlClHKH21RsmLDwpz3Qy80lHnP9VxRMXlsweD
exgQO6d6KCHBFbcSVvc/+cKAtUXqGb6OO+5tUHbkDDJwIuNhzvajrnhs9eFa
6ggDi7+YXt1u5IhG8lnZn2MMKLgsqAr9bY1mwdX7Vv1gYMMC44j0pUD7R6Xe
+78YGC4Wr1+YrY7u+122pD8MBN2glnmqkdB3Jrfi2CwDpTU3VEVqdDG8y19q
WIAJSuUOAcFAS0ysVNrtMp8J47tJ/u4ldphe0fXxxiImHpU3v1pU5wwBqVwr
uSVM/LaVfIgONyyc8Lu89z8mzvZ5LXb64AaxZkXJz5JMCN1ZGef42RlSFe93
WEkzEbXuSJZkmx0Uks50lcoxIXz83FvfVEuohflZ/KfExCnb8OEEWT0wbBVL
opYzsZzf5pscR4I67b1YO4lJ1N/dhRw5DejOPxNtRCP2jxM/47UaMO7xfZfP
ZMJaz1rpX6ANLB8pmM3nMrG58HSCT4Mj7PM6i0M1mNi03jd/vNcVrntzRF5o
E/cj7bL/ut4dK319IzT1mFD6Y/577KArAvQV3mYYMrHAsHfgk5Qj1sl0Gv0x
YWLZ39zix4essXky+1yAOYGXc33FOsKfRrWsWvSYz0RO7rb03DQ2dl2V30K3
ZaJVTy7yww0qDqa8aznuwERNYIev1jFDHNucrf/dmYmdYTnfj9KtkGy/Ks/T
nQkrY4eiNlMHnGLIz7/jxUR6rNaRzBWu8A+gXez1YeKi212pxSHuoJzStv/P
n9i/ae2n03VuGHmGUf1AJhI2H3xMeumMm3NOqcFBTGx4XG+/+Lsd9q7w005Z
x8RkoP7p/O+W4G8KfXs7lIkh7fMSS6r0IXpu+67eTUysKxU2XqRKRdvbw0r/
bWUiQ6JWNimWjVzR1If6UUwstlCwWuRrghCLs0HB25locbHw7muxAifm0oKU
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
94+J707HrrAbHPwPfwVfbQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$44100#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
F/Jh8rjTXp7IW9iNtb5ftrphi/dCSf0PDHwm+aritAcu/1jV7vORgXcnHFfn
E8+fxG9IOTjAwOolupZ9f5wxyrq4LmWIgRy/Ph9KvQ3ka5/QykcZ+P7vRuH3
g4D5um/D3V8ZOLr3bM6aXxzsmFEu+PudgfOB91/pMSQFyZcdw5R/EvruI5cJ
0eUEtRqHDEx+M7A+K3DMgMfAt+bs2YA/DLRp7pz6lWMMpeA3NZGzDCzLLz2/
/LE1bOaKxN6Yw0TfNv5Jmxkn7Lmu41w1nwnV+UK76MT8cV1/o/RHESZG+Aob
WnZ5oPHVxTdzxZiIHw2sCRhzw8+dVdepS5kQuytxvIuYv0mLx9dbLmNiyX39
SbfFdnD4byVrkwwTh6cuGcj+NEW4qdPYSXkmmnsOZ+oZaOBW96H7WcuZ2H0p
bltZ9d/K1v054U+VmWi170TGQSXB9LKu1UMkJtbF2SzQMySDnicyV5TGRMGE
5pX9TUZwsdV9ymYyEU0JOZquao1DnzbG2XOYuOLbvz/miRNuH73kuk2VCdtA
G+ORT654qVgtF6fBxNGFq8bu5njg38Px7lxt4n3RC/tuObuD7aJy85kuE9Xz
jj5/0c6Hx6jT5q8GTDjf+m8kOsgOkacOcyWMmRBt1hTaKWWGu+S74+qmTDw/
bqZ8ZZ4GOh53PXKxIPB7KCVF/RYWzPFZdGi3NRNnXJos/esVBaoTuqYX7Zh4
xrMXK5Clwjdh04IHjkz0OCxeXXZ/NaLZiU2v+ExskTujKH3eGgW11ecm3Yjn
I4zXQsuc0b3uu4esFxMh/bWnzyx0g8gfleW6vkyYGYb3cwo9oJXk/MFrLROT
d4NPB6m5w1/zSGb4OibENWdyUh7xEdtyd8vV9Uxk6IqXxyjY4VHwW7XSTUzc
e8EJ+JVvit65opNdIUzw+pPJcoNqEEvTK53ZRuBJvmqimr1IoGew+ajSLib6
5Uo+vr4lK1j/OtFi9R4m5hkPuERfJHSxq2aR/z4m4uo3bDcibGDp4h/Pjhxg
Qjgmoyt70gb9/5EupR1i4s+UvPhfWz5GT/T+nhvJRITH+cJclju+B90ICD7O
xA+6w0/rMQ/8RmBt80kmGjyHYh3aXCG0ksTRiCX44z/Ydf+hIxb8/XAuMY4J
5fu/iiXHLSD+Nv3n73NMvPh3rzHTfhWkS9b5+V9iYr/zwpWdVl2VikkqVVVJ
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
5Js0
          "]]}, 
        Annotation[#, "Charting`Private`Tag$44100#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 20}, {-13.750894823393182`, 135.3385805869977}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(1\\)]\\)'\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(2\\)]\\)'\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7192330780972767`*^9, 3.719233092874982*^9}, 
   3.719233225705411*^9, 3.719233266804435*^9, 3.7192351048971643`*^9, 
   3.719235159449831*^9, {3.719235228375042*^9, 3.71923523952286*^9}, {
   3.719235677101577*^9, 3.7192357353154583`*^9}, 3.719235777101623*^9, {
   3.719235809114588*^9, 3.7192358381321383`*^9}, 3.719235887723482*^9, 
   3.719235938864821*^9, 3.7192359896969967`*^9, 3.719289582971943*^9, 
   3.719289907612834*^9, 3.719320509363595*^9, 3.8476127976422944`*^9, 
   3.8476137355974474`*^9, {3.8476176404982443`*^9, 3.847617671403333*^9}, 
   3.8476207090048666`*^9, {3.847620940839336*^9, 3.8476209484576254`*^9}, {
   3.847620986774482*^9, 3.847621003454749*^9}, 3.847621115362403*^9, 
   3.8476213684353514`*^9, {3.847709834689514*^9, 3.847709850967513*^9}, {
   3.847709920205048*^9, 3.847710002991678*^9}, 3.847710129400318*^9, 
   3.8477101993780403`*^9, {3.847774726198639*^9, 3.8477747771498547`*^9}, {
   3.847774811177125*^9, 3.84777486322458*^9}, {3.8477753401863213`*^9, 
   3.847775346618228*^9}, {3.847775385774832*^9, 3.847775398089085*^9}, 
   3.8477754464063053`*^9, {3.847775804560273*^9, 3.847775864424695*^9}, 
   3.847778636199127*^9, 3.847778757906458*^9, 3.847778789904139*^9},
 CellLabel->
  "Out[920]=",ExpressionUUID->"d6ac6a19-fec8-4d0b-916c-8305f25c4c1c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 6.3500000000000005`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 20, 0.025}}, Typeset`size$$ = {
    360., {180., 186.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$44164$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$44164$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        $CellContext`pendulum[$CellContext`t$$], 
        PlotRange -> {{-2, 2}, {-2, 2}}, Axes -> True], 
      "Specifications" :> {{$CellContext`t$$, 0, 20, 0.025, AnimationRate -> 
         1, AnimationRunning -> False, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{407., {215., 222.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7192330780972767`*^9, 3.719233092874982*^9}, 
   3.719233225705411*^9, 3.719233266804435*^9, 3.7192351048971643`*^9, 
   3.719235159449831*^9, {3.719235228375042*^9, 3.71923523952286*^9}, {
   3.719235677101577*^9, 3.7192357353154583`*^9}, 3.719235777101623*^9, {
   3.719235809114588*^9, 3.7192358381321383`*^9}, 3.719235887723482*^9, 
   3.719235938864821*^9, 3.7192359896969967`*^9, 3.719289582971943*^9, 
   3.719289907612834*^9, 3.719320509363595*^9, 3.8476127976422944`*^9, 
   3.8476137355974474`*^9, {3.8476176404982443`*^9, 3.847617671403333*^9}, 
   3.8476207090048666`*^9, {3.847620940839336*^9, 3.8476209484576254`*^9}, {
   3.847620986774482*^9, 3.847621003454749*^9}, 3.847621115362403*^9, 
   3.8476213684353514`*^9, {3.847709834689514*^9, 3.847709850967513*^9}, {
   3.847709920205048*^9, 3.847710002991678*^9}, 3.847710129400318*^9, 
   3.8477101993780403`*^9, {3.847774726198639*^9, 3.8477747771498547`*^9}, {
   3.847774811177125*^9, 3.84777486322458*^9}, {3.8477753401863213`*^9, 
   3.847775346618228*^9}, {3.847775385774832*^9, 3.847775398089085*^9}, 
   3.8477754464063053`*^9, {3.847775804560273*^9, 3.847775864424695*^9}, 
   3.847778636199127*^9, 3.847778757906458*^9, 3.8477787900506*^9},
 CellLabel->
  "Out[921]=",ExpressionUUID->"5bb62062-d84e-4110-a3d2-dd6f989201b8"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.716113077772964*^9, 3.7161131053374233`*^9}, {
   3.71629150839826*^9, 3.716291538367016*^9}, {3.716635264442958*^9, 
   3.716635268063497*^9}, {3.7166354531953573`*^9, 3.716635563884454*^9}, {
   3.716635612024973*^9, 3.716635649761747*^9}, {3.7166366365737534`*^9, 
   3.7166366612346287`*^9}, {3.717146377539042*^9, 3.717146468885425*^9}, {
   3.717164369287184*^9, 3.717164399614447*^9}, {3.717164667290859*^9, 
   3.717164671473257*^9}, {3.717165321350337*^9, 3.717165345509753*^9}, {
   3.717165485470544*^9, 3.717165499480867*^9}, {3.717166395929446*^9, 
   3.717166396097677*^9}, {3.717208385312481*^9, 3.717208389008155*^9}, {
   3.717299545055232*^9, 3.7172995563540697`*^9}, {3.717300425432035*^9, 
   3.717300442652185*^9}, 3.717303467837263*^9, {3.717306195358178*^9, 
   3.717306291055962*^9}, {3.7173063947753563`*^9, 3.717306397485787*^9}, {
   3.717306636801922*^9, 3.717306640086507*^9}, {3.717307505267696*^9, 
   3.717307517293928*^9}, {3.7173075616290894`*^9, 3.7173075872291193`*^9}, {
   3.717309371402851*^9, 3.717309392435356*^9}, {3.7173239290040197`*^9, 
   3.7173240417030687`*^9}, {3.7192334088389673`*^9, 3.719233462560337*^9}, {
   3.719235395712901*^9, 3.719235395873527*^9}, {3.719235434387312*^9, 
   3.719235455831561*^9}, {3.7192354892257843`*^9, 3.719235490173019*^9}, {
   3.719235919214726*^9, 3.719235919372387*^9}, {3.719285564193255*^9, 
   3.719285566718059*^9}, {3.719289588073484*^9, 3.719289601111367*^9}, {
   3.7192899142367268`*^9, 3.7192899249009447`*^9}, {3.719320526873164*^9, 
   3.719320541637828*^9}, {3.719323213670857*^9, 3.719323224235262*^9}, {
   3.7193232701035852`*^9, 3.7193232745005207`*^9}, {3.847611795198206*^9, 
   3.847611846509787*^9}, 3.847617753399353*^9},
 Background->RGBColor[1., 1., 0.85],
 CellLabel->
  "In[403]:=",ExpressionUUID->"64b16b53-2538-4b79-b61f-9f198266a113"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.847611848074135*^9, 3.847612051464181*^9}, {
  3.8476142685270224`*^9, 
  3.847614269837554*^9}},ExpressionUUID->"66d2d29c-3c19-45df-bfa8-\
74771adc2aca"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.847612163919894*^9, 3.8476121710863647`*^9}, {
  3.8476122769176655`*^9, 3.8476123103976946`*^9}, {3.8476126991176815`*^9, 
  3.8476127431520295`*^9}, {3.8476128344997816`*^9, 3.847612836361863*^9}, {
  3.847612950778928*^9, 3.847612962799631*^9}, {3.8476146654793124`*^9, 
  3.847614666188924*^9}, {3.847617633135726*^9, 3.8476176349603987`*^9}},
 CellLabel->
  "In[381]:=",ExpressionUUID->"c80e4cea-7410-4827-8f5d-c06bcbd9a776"],

Cell["", "Input",
 CellChangeTimes->{{3.8476120784489965`*^9, 
  3.847612135460521*^9}},ExpressionUUID->"361c620d-c349-478d-b532-\
13ac861dd650"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Controller (input-output decoulpling - linearization)", "Subsection",
 CellChangeTimes->{{3.717318504697794*^9, 3.717318509729301*^9}, {
  3.717320665127475*^9, 3.717320665284671*^9}, {3.717851890156783*^9, 
  3.717851894958394*^9}, {3.719236071483384*^9, 3.719236073515156*^9}, {
  3.719236181935841*^9, 3.7192361943244467`*^9}, {3.719286256281653*^9, 
  3.719286265744729*^9}},ExpressionUUID->"0c1cbe86-6285-4eca-81b0-\
5013fa2d89b9"],

Cell[TextData[{
 "\nThe new control inputs:  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["v", "1"], 
       StyleBox[",",
        FontSlant->"Italic"], 
       SubscriptBox[
        StyleBox["v",
         FontSlant->"Italic"], "2"]}], ")"}], "T"]}], TraditionalForm]],
  FontSlant->"Italic",ExpressionUUID->"51c2ae3c-0e2a-458b-a6cb-8b94b039bfef"]
}], "Text",
 CellChangeTimes->{{3.717320518423232*^9, 3.7173205260015097`*^9}, {
   3.7173206680478363`*^9, 3.717320685279768*^9}, {3.717320775366974*^9, 
   3.7173207753670177`*^9}, {3.717321166839571*^9, 3.717321167855044*^9}, {
   3.717321215102807*^9, 3.71732121940657*^9}, 3.717851914882493*^9, {
   3.719231496662671*^9, 3.719231581477215*^9}, {3.719285116290065*^9, 
   3.719285134003398*^9}},ExpressionUUID->"3bb331ca-6b41-4395-b8d5-\
8e920c5c527b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "vector"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"vv", "[", "t_", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"v1", "[", "t", "]"}], ",", 
       RowBox[{"v2", "[", "t", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"the", " ", "pendulum", " ", "jacobian", " ", "matrix", " ", 
     RowBox[{"(", 
      RowBox[{
      "velocity", " ", "of", " ", "the", " ", "second", " ", "link", " ", 
       "end"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"mJ", "[", "t_", "]"}], "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"vk2", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"vq", "[", "t", "]"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"the", " ", "control", " ", "loop", " ", "matrices"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mD", "=", 
     RowBox[{
      RowBox[{"mJ", "[", "t", "]"}], ".", 
      RowBox[{"Inverse", "[", "mQ", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mP", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mJ", "'"}], "[", "t", "]"}], ".", 
       RowBox[{
        RowBox[{"vq", "'"}], "[", "t", "]"}]}], "-", 
      RowBox[{
       RowBox[{"mJ", "[", "t", "]"}], ".", 
       RowBox[{"Inverse", "[", "mQ", "]"}], ".", "mB"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "the", " ", "linearized", " ", "equations", " ", "of", " ", "dynamics"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lineqns", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"mQ", ".", 
         RowBox[{
          RowBox[{"vq", "''"}], "[", "t", "]"}]}], "+", "mB"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          RowBox[{"Inverse", "[", "mD", "]"}], ".", "mP"}]}], "+", 
        RowBox[{
         RowBox[{"Inverse", "[", "mD", "]"}], ".", 
         RowBox[{"vv", "[", "t", "]"}]}]}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Map", "[", 
    RowBox[{"MatrixForm", ",", "lineqns", ",", "1"}], "]"}], "   ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "display"}], " ", "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.716113077772964*^9, 3.7161131053374233`*^9}, {
   3.71629150839826*^9, 3.716291538367016*^9}, {3.716635264442958*^9, 
   3.716635268063497*^9}, {3.7166354531953573`*^9, 3.716635563884454*^9}, {
   3.716635612024973*^9, 3.716635649761747*^9}, {3.7166366365737534`*^9, 
   3.7166366612346287`*^9}, {3.717146377539042*^9, 3.717146468885425*^9}, {
   3.717164369287184*^9, 3.7171644926207647`*^9}, {3.71716455207098*^9, 
   3.717164646127008*^9}, {3.717164683973415*^9, 3.7171647471423903`*^9}, {
   3.7171655272177*^9, 3.717165529630464*^9}, {3.7171658372704287`*^9, 
   3.717165900295257*^9}, {3.717309541785561*^9, 3.717309553427052*^9}, {
   3.717309604963059*^9, 3.717309653791027*^9}, {3.717309702465728*^9, 
   3.7173097266386843`*^9}, {3.717318171175213*^9, 3.717318231034327*^9}, {
   3.717318275894413*^9, 3.717318295928872*^9}, {3.717318392511983*^9, 
   3.7173184207602167`*^9}, {3.717319137369543*^9, 3.7173193652928753`*^9}, 
   3.717325595001597*^9, {3.717325717116653*^9, 3.7173257310252934`*^9}, {
   3.717829232222187*^9, 3.717829237477491*^9}, {3.717829473612962*^9, 
   3.717829479342431*^9}, {3.717851922383811*^9, 3.717851944449869*^9}, {
   3.717852030518997*^9, 3.717852103582632*^9}, {3.717852140381339*^9, 
   3.717852160528508*^9}, {3.717852200985468*^9, 3.717852224615305*^9}, {
   3.719230841911601*^9, 3.719231054738508*^9}, {3.719231102178603*^9, 
   3.7192313192839746`*^9}, {3.7192313761763783`*^9, 
   3.7192313765842037`*^9}, {3.7192314081887407`*^9, 3.719231479494794*^9}, {
   3.71923154770265*^9, 3.719231548297187*^9}, {3.719231588260778*^9, 
   3.719231635998782*^9}, {3.719231667552891*^9, 3.71923174736522*^9}, {
   3.719231816620851*^9, 3.719231896018841*^9}, {3.71923192836368*^9, 
   3.7192320556302853`*^9}, {3.7192320894560328`*^9, 3.719232238013698*^9}, {
   3.719232302818242*^9, 3.719232360898911*^9}, {3.719232402023178*^9, 
   3.7192324139755487`*^9}, {3.719232446262272*^9, 3.719232691564599*^9}, {
   3.7192365948084507`*^9, 3.719236660799396*^9}, {3.719236954171174*^9, 
   3.719236965792445*^9}, {3.719236999383698*^9, 3.719237260474986*^9}, {
   3.7192382958867283`*^9, 3.719238304585381*^9}, {3.7192852228446074`*^9, 
   3.7192853268960543`*^9}, {3.719289618502836*^9, 3.719289618881316*^9}, 
   3.719289938306576*^9, {3.7193185592825203`*^9, 3.7193185631064453`*^9}, {
   3.719320869222033*^9, 3.7193208808249826`*^9}, {3.719321554011815*^9, 
   3.71932155467696*^9}},
 Background->RGBColor[1., 1., 0.85],
 CellLabel->"In[85]:=",ExpressionUUID->"5f481c84-a3ff-4b2a-b001-335ad358d289"],

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        RowBox[{"g", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["m", "1"], "+", 
           SubscriptBox["m", "2"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", "\[Theta]newcontr"}], 
            "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"v1", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
              RowBox[{
               RowBox[{"v2", "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}]}], 
           ";", 
           RowBox[{"2", "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SubscriptBox["l", "2"], " ", 
         SubscriptBox["m", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         SubsuperscriptBox["l", "1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["m", "1"], "+", 
           SubscriptBox["m", "2"]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SubscriptBox["l", "2"], " ", 
         SubscriptBox["m", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"g", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "2"], " ", 
         SubscriptBox["m", "2"]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SubscriptBox["l", "2"], " ", 
         SubscriptBox["m", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SubscriptBox["l", "2"], " ", 
         SubscriptBox["m", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         SubsuperscriptBox["l", "1", "2"], " ", 
         SubscriptBox["m", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "\[Equal]", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubscriptBox["l", "2"], " ", 
               SubscriptBox["m", "2"]}], 
              RowBox[{
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubscriptBox["m", "1"], " ", 
                SubscriptBox["m", "2"]}], "+", 
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubsuperscriptBox["m", "2", "2"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                SubsuperscriptBox["l", "1", "2"], " ", 
                SubsuperscriptBox["l", "2", "2"], " ", 
                SubsuperscriptBox["m", "2", "2"]}]}]]}], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
              SubsuperscriptBox["l", "1", "2"], " ", 
              SubscriptBox["l", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["m", "1"], "+", 
                SubscriptBox["m", "2"]}], ")"}]}], 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}]]}], ")"}], " ", 
          RowBox[{"v1", "[", "t", "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
             SubsuperscriptBox["l", "1", "5"], " ", 
             SubscriptBox["l", "2"], " ", 
             SubscriptBox["m", "1"], " ", 
             SubscriptBox["m", "2"]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubscriptBox["m", "1"], " ", 
                SubscriptBox["m", "2"]}], "+", 
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubsuperscriptBox["m", "2", "2"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                SubsuperscriptBox["l", "1", "2"], " ", 
                SubsuperscriptBox["l", "2", "2"], " ", 
                SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]]}], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubscriptBox["m", "1"], " ", 
            SubscriptBox["m", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "3"], " ", 
            SubsuperscriptBox["l", "2", "3"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "3"], " ", 
            SubsuperscriptBox["l", "2", "3"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]]}]], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
              SubsuperscriptBox["l", "1", "2"], " ", 
              SubscriptBox["l", "2"], " ", 
              SubscriptBox["m", "2"]}], 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}]], "-", 
            FractionBox[
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
              SubsuperscriptBox["l", "1", "2"], " ", 
              SubscriptBox["l", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["m", "1"], "+", 
                SubscriptBox["m", "2"]}], ")"}]}], 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}]]}], ")"}], " ", 
          RowBox[{"v2", "[", "t", "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
             SubsuperscriptBox["l", "1", "5"], " ", 
             SubscriptBox["l", "2"], " ", 
             SubscriptBox["m", "1"], " ", 
             SubscriptBox["m", "2"]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubscriptBox["m", "1"], " ", 
                SubscriptBox["m", "2"]}], "+", 
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubsuperscriptBox["m", "2", "2"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                SubsuperscriptBox["l", "1", "2"], " ", 
                SubsuperscriptBox["l", "2", "2"], " ", 
                SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]]}], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubscriptBox["m", "1"], " ", 
            SubscriptBox["m", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "3"], " ", 
            SubsuperscriptBox["l", "2", "3"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "3"], " ", 
            SubsuperscriptBox["l", "2", "3"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]]}]], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubscriptBox["l", "2"], " ", 
               SubscriptBox["m", "2"]}], 
              RowBox[{
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubscriptBox["m", "1"], " ", 
                SubscriptBox["m", "2"]}], "+", 
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubsuperscriptBox["m", "2", "2"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                SubsuperscriptBox["l", "1", "2"], " ", 
                SubsuperscriptBox["l", "2", "2"], " ", 
                SubsuperscriptBox["m", "2", "2"]}]}]]}], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
              SubsuperscriptBox["l", "1", "2"], " ", 
              SubscriptBox["l", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["m", "1"], "+", 
                SubscriptBox["m", "2"]}], ")"}]}], 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], " ", 
             SubscriptBox["l", "1"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Theta]1", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
                  SubsuperscriptBox["l", "1", "2"], " ", 
                  SubscriptBox["l", "2"], " ", 
                  SubscriptBox["m", "2"]}], 
                 RowBox[{
                  RowBox[{
                   SubsuperscriptBox["l", "1", "4"], " ", 
                   SubscriptBox["m", "1"], " ", 
                   SubscriptBox["m", "2"]}], "+", 
                  RowBox[{
                   SubsuperscriptBox["l", "1", "4"], " ", 
                   SubsuperscriptBox["m", "2", "2"]}], "-", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                   
                   SubsuperscriptBox["l", "1", "2"], " ", 
                   SubsuperscriptBox["l", "2", "2"], " ", 
                   SubsuperscriptBox["m", "2", "2"]}]}]]}], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
                 SubsuperscriptBox["l", "1", "2"], " ", 
                 SubscriptBox["l", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SubscriptBox["m", "1"], "+", 
                   SubscriptBox["m", "2"]}], ")"}]}], 
                RowBox[{
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubscriptBox["m", "1"], " ", 
                  SubscriptBox["m", "2"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                  
                  SubsuperscriptBox["l", "1", "2"], " ", 
                  SubsuperscriptBox["l", "2", "2"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}]}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"g", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
                SubscriptBox["l", "2"], " ", 
                SubscriptBox["m", "2"]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
                SubscriptBox["l", "1"], " ", 
                SubscriptBox["l", "2"], " ", 
                SubscriptBox["m", "2"], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Theta]1", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
              ")"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             SubscriptBox["l", "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Theta]2", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
                 SubsuperscriptBox["l", "1", "3"], " ", 
                 SubscriptBox["m", "2"]}], 
                RowBox[{
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubscriptBox["m", "1"], " ", 
                  SubscriptBox["m", "2"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                  
                  SubsuperscriptBox["l", "1", "2"], " ", 
                  SubsuperscriptBox["l", "2", "2"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}]}]], "-", 
               FractionBox[
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
                 SubscriptBox["l", "1"], " ", 
                 SubsuperscriptBox["l", "2", "2"], " ", 
                 SubscriptBox["m", "2"]}], 
                RowBox[{
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubscriptBox["m", "1"], " ", 
                  SubscriptBox["m", "2"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                  
                  SubsuperscriptBox["l", "1", "2"], " ", 
                  SubsuperscriptBox["l", "2", "2"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}]}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"g", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
                SubscriptBox["l", "1"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["m", "1"], "+", 
                  SubscriptBox["m", "2"]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
                SubscriptBox["l", "1"], " ", 
                SubscriptBox["l", "2"], " ", 
                SubscriptBox["m", "2"], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Theta]2", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
              ")"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
             SubsuperscriptBox["l", "1", "5"], " ", 
             SubscriptBox["l", "2"], " ", 
             SubscriptBox["m", "1"], " ", 
             SubscriptBox["m", "2"]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubscriptBox["m", "1"], " ", 
                SubscriptBox["m", "2"]}], "+", 
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubsuperscriptBox["m", "2", "2"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                SubsuperscriptBox["l", "1", "2"], " ", 
                SubsuperscriptBox["l", "2", "2"], " ", 
                SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]]}], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubscriptBox["m", "1"], " ", 
            SubscriptBox["m", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "3"], " ", 
            SubsuperscriptBox["l", "2", "3"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "3"], " ", 
            SubsuperscriptBox["l", "2", "3"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]]}]], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
              SubsuperscriptBox["l", "1", "2"], " ", 
              SubscriptBox["l", "2"], " ", 
              SubscriptBox["m", "2"]}], 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}]], "-", 
            FractionBox[
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
              SubsuperscriptBox["l", "1", "2"], " ", 
              SubscriptBox["l", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["m", "1"], "+", 
                SubscriptBox["m", "2"]}], ")"}]}], 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
             SubscriptBox["l", "1"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Theta]1", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
                  SubsuperscriptBox["l", "1", "2"], " ", 
                  SubscriptBox["l", "2"], " ", 
                  SubscriptBox["m", "2"]}], 
                 RowBox[{
                  RowBox[{
                   SubsuperscriptBox["l", "1", "4"], " ", 
                   SubscriptBox["m", "1"], " ", 
                   SubscriptBox["m", "2"]}], "+", 
                  RowBox[{
                   SubsuperscriptBox["l", "1", "4"], " ", 
                   SubsuperscriptBox["m", "2", "2"]}], "-", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                   
                   SubsuperscriptBox["l", "1", "2"], " ", 
                   SubsuperscriptBox["l", "2", "2"], " ", 
                   SubsuperscriptBox["m", "2", "2"]}]}]]}], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
                 SubsuperscriptBox["l", "1", "2"], " ", 
                 SubscriptBox["l", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SubscriptBox["m", "1"], "+", 
                   SubscriptBox["m", "2"]}], ")"}]}], 
                RowBox[{
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubscriptBox["m", "1"], " ", 
                  SubscriptBox["m", "2"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                  
                  SubsuperscriptBox["l", "1", "2"], " ", 
                  SubsuperscriptBox["l", "2", "2"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}]}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"g", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
                SubscriptBox["l", "2"], " ", 
                SubscriptBox["m", "2"]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
                SubscriptBox["l", "1"], " ", 
                SubscriptBox["l", "2"], " ", 
                SubscriptBox["m", "2"], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Theta]1", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             SubscriptBox["l", "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Theta]2", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
                 SubsuperscriptBox["l", "1", "3"], " ", 
                 SubscriptBox["m", "2"]}], 
                RowBox[{
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubscriptBox["m", "1"], " ", 
                  SubscriptBox["m", "2"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                  
                  SubsuperscriptBox["l", "1", "2"], " ", 
                  SubsuperscriptBox["l", "2", "2"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}]}]], "-", 
               FractionBox[
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
                 SubscriptBox["l", "1"], " ", 
                 SubsuperscriptBox["l", "2", "2"], " ", 
                 SubscriptBox["m", "2"]}], 
                RowBox[{
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubscriptBox["m", "1"], " ", 
                  SubscriptBox["m", "2"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                  
                  SubsuperscriptBox["l", "1", "2"], " ", 
                  SubsuperscriptBox["l", "2", "2"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}]}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"g", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
                SubscriptBox["l", "1"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["m", "1"], "+", 
                  SubscriptBox["m", "2"]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
                SubscriptBox["l", "1"], " ", 
                SubscriptBox["l", "2"], " ", 
                SubscriptBox["m", "2"], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Theta]2", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
              ")"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
             SubsuperscriptBox["l", "1", "5"], " ", 
             SubscriptBox["l", "2"], " ", 
             SubscriptBox["m", "1"], " ", 
             SubscriptBox["m", "2"]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubscriptBox["m", "1"], " ", 
                SubscriptBox["m", "2"]}], "+", 
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubsuperscriptBox["m", "2", "2"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                SubsuperscriptBox["l", "1", "2"], " ", 
                SubsuperscriptBox["l", "2", "2"], " ", 
                SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]]}], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubscriptBox["m", "1"], " ", 
            SubscriptBox["m", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "3"], " ", 
            SubsuperscriptBox["l", "2", "3"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "3"], " ", 
            SubsuperscriptBox["l", "2", "3"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]]}]]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
               SubsuperscriptBox["l", "1", "3"], " ", 
               SubscriptBox["m", "2"]}], 
              RowBox[{
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubscriptBox["m", "1"], " ", 
                SubscriptBox["m", "2"]}], "+", 
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubsuperscriptBox["m", "2", "2"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                SubsuperscriptBox["l", "1", "2"], " ", 
                SubsuperscriptBox["l", "2", "2"], " ", 
                SubsuperscriptBox["m", "2", "2"]}]}]]}], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
              SubscriptBox["l", "1"], " ", 
              SubsuperscriptBox["l", "2", "2"], " ", 
              SubscriptBox["m", "2"]}], 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}]]}], ")"}], " ", 
          RowBox[{"v1", "[", "t", "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
             SubsuperscriptBox["l", "1", "5"], " ", 
             SubscriptBox["l", "2"], " ", 
             SubscriptBox["m", "1"], " ", 
             SubscriptBox["m", "2"]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubscriptBox["m", "1"], " ", 
                SubscriptBox["m", "2"]}], "+", 
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubsuperscriptBox["m", "2", "2"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                SubsuperscriptBox["l", "1", "2"], " ", 
                SubsuperscriptBox["l", "2", "2"], " ", 
                SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]]}], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubscriptBox["m", "1"], " ", 
            SubscriptBox["m", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "3"], " ", 
            SubsuperscriptBox["l", "2", "3"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "3"], " ", 
            SubsuperscriptBox["l", "2", "3"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]]}]], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
              SubsuperscriptBox["l", "1", "3"], " ", 
              SubscriptBox["m", "2"]}], 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}]], "-", 
            FractionBox[
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
              SubscriptBox["l", "1"], " ", 
              SubsuperscriptBox["l", "2", "2"], " ", 
              SubscriptBox["m", "2"]}], 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}]]}], ")"}], " ", 
          RowBox[{"v2", "[", "t", "]"}]}], 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
             SubsuperscriptBox["l", "1", "5"], " ", 
             SubscriptBox["l", "2"], " ", 
             SubscriptBox["m", "1"], " ", 
             SubscriptBox["m", "2"]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubscriptBox["m", "1"], " ", 
                SubscriptBox["m", "2"]}], "+", 
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubsuperscriptBox["m", "2", "2"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                SubsuperscriptBox["l", "1", "2"], " ", 
                SubsuperscriptBox["l", "2", "2"], " ", 
                SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]]}], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubscriptBox["m", "1"], " ", 
            SubscriptBox["m", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "3"], " ", 
            SubsuperscriptBox["l", "2", "3"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "3"], " ", 
            SubsuperscriptBox["l", "2", "3"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]]}]], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
               SubsuperscriptBox["l", "1", "3"], " ", 
               SubscriptBox["m", "2"]}], 
              RowBox[{
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubscriptBox["m", "1"], " ", 
                SubscriptBox["m", "2"]}], "+", 
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubsuperscriptBox["m", "2", "2"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                SubsuperscriptBox["l", "1", "2"], " ", 
                SubsuperscriptBox["l", "2", "2"], " ", 
                SubsuperscriptBox["m", "2", "2"]}]}]]}], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
              SubscriptBox["l", "1"], " ", 
              SubsuperscriptBox["l", "2", "2"], " ", 
              SubscriptBox["m", "2"]}], 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], " ", 
             SubscriptBox["l", "1"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Theta]1", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
                  SubsuperscriptBox["l", "1", "2"], " ", 
                  SubscriptBox["l", "2"], " ", 
                  SubscriptBox["m", "2"]}], 
                 RowBox[{
                  RowBox[{
                   SubsuperscriptBox["l", "1", "4"], " ", 
                   SubscriptBox["m", "1"], " ", 
                   SubscriptBox["m", "2"]}], "+", 
                  RowBox[{
                   SubsuperscriptBox["l", "1", "4"], " ", 
                   SubsuperscriptBox["m", "2", "2"]}], "-", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                   
                   SubsuperscriptBox["l", "1", "2"], " ", 
                   SubsuperscriptBox["l", "2", "2"], " ", 
                   SubsuperscriptBox["m", "2", "2"]}]}]]}], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
                 SubsuperscriptBox["l", "1", "2"], " ", 
                 SubscriptBox["l", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SubscriptBox["m", "1"], "+", 
                   SubscriptBox["m", "2"]}], ")"}]}], 
                RowBox[{
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubscriptBox["m", "1"], " ", 
                  SubscriptBox["m", "2"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                  
                  SubsuperscriptBox["l", "1", "2"], " ", 
                  SubsuperscriptBox["l", "2", "2"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}]}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"g", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
                SubscriptBox["l", "2"], " ", 
                SubscriptBox["m", "2"]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
                SubscriptBox["l", "1"], " ", 
                SubscriptBox["l", "2"], " ", 
                SubscriptBox["m", "2"], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Theta]1", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
              ")"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             SubscriptBox["l", "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Theta]2", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
                 SubsuperscriptBox["l", "1", "3"], " ", 
                 SubscriptBox["m", "2"]}], 
                RowBox[{
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubscriptBox["m", "1"], " ", 
                  SubscriptBox["m", "2"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                  
                  SubsuperscriptBox["l", "1", "2"], " ", 
                  SubsuperscriptBox["l", "2", "2"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}]}]], "-", 
               FractionBox[
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
                 SubscriptBox["l", "1"], " ", 
                 SubsuperscriptBox["l", "2", "2"], " ", 
                 SubscriptBox["m", "2"]}], 
                RowBox[{
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubscriptBox["m", "1"], " ", 
                  SubscriptBox["m", "2"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                  
                  SubsuperscriptBox["l", "1", "2"], " ", 
                  SubsuperscriptBox["l", "2", "2"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}]}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"g", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
                SubscriptBox["l", "1"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["m", "1"], "+", 
                  SubscriptBox["m", "2"]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
                SubscriptBox["l", "1"], " ", 
                SubscriptBox["l", "2"], " ", 
                SubscriptBox["m", "2"], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Theta]2", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
              ")"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
             SubsuperscriptBox["l", "1", "5"], " ", 
             SubscriptBox["l", "2"], " ", 
             SubscriptBox["m", "1"], " ", 
             SubscriptBox["m", "2"]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubscriptBox["m", "1"], " ", 
                SubscriptBox["m", "2"]}], "+", 
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubsuperscriptBox["m", "2", "2"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                SubsuperscriptBox["l", "1", "2"], " ", 
                SubsuperscriptBox["l", "2", "2"], " ", 
                SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]]}], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubscriptBox["m", "1"], " ", 
            SubscriptBox["m", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "3"], " ", 
            SubsuperscriptBox["l", "2", "3"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "3"], " ", 
            SubsuperscriptBox["l", "2", "3"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]]}]], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
              SubsuperscriptBox["l", "1", "3"], " ", 
              SubscriptBox["m", "2"]}], 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}]], "-", 
            FractionBox[
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
              SubscriptBox["l", "1"], " ", 
              SubsuperscriptBox["l", "2", "2"], " ", 
              SubscriptBox["m", "2"]}], 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
             SubscriptBox["l", "1"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Theta]1", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
                  SubsuperscriptBox["l", "1", "2"], " ", 
                  SubscriptBox["l", "2"], " ", 
                  SubscriptBox["m", "2"]}], 
                 RowBox[{
                  RowBox[{
                   SubsuperscriptBox["l", "1", "4"], " ", 
                   SubscriptBox["m", "1"], " ", 
                   SubscriptBox["m", "2"]}], "+", 
                  RowBox[{
                   SubsuperscriptBox["l", "1", "4"], " ", 
                   SubsuperscriptBox["m", "2", "2"]}], "-", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                   
                   SubsuperscriptBox["l", "1", "2"], " ", 
                   SubsuperscriptBox["l", "2", "2"], " ", 
                   SubsuperscriptBox["m", "2", "2"]}]}]]}], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
                 SubsuperscriptBox["l", "1", "2"], " ", 
                 SubscriptBox["l", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SubscriptBox["m", "1"], "+", 
                   SubscriptBox["m", "2"]}], ")"}]}], 
                RowBox[{
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubscriptBox["m", "1"], " ", 
                  SubscriptBox["m", "2"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                  
                  SubsuperscriptBox["l", "1", "2"], " ", 
                  SubsuperscriptBox["l", "2", "2"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}]}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"g", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
                SubscriptBox["l", "2"], " ", 
                SubscriptBox["m", "2"]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
                SubscriptBox["l", "1"], " ", 
                SubscriptBox["l", "2"], " ", 
                SubscriptBox["m", "2"], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Theta]1", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             SubscriptBox["l", "2"], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Theta]2", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
                 SubsuperscriptBox["l", "1", "3"], " ", 
                 SubscriptBox["m", "2"]}], 
                RowBox[{
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubscriptBox["m", "1"], " ", 
                  SubscriptBox["m", "2"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                  
                  SubsuperscriptBox["l", "1", "2"], " ", 
                  SubsuperscriptBox["l", "2", "2"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}]}]], "-", 
               FractionBox[
                RowBox[{
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
                 SubscriptBox["l", "1"], " ", 
                 SubsuperscriptBox["l", "2", "2"], " ", 
                 SubscriptBox["m", "2"]}], 
                RowBox[{
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubscriptBox["m", "1"], " ", 
                  SubscriptBox["m", "2"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["l", "1", "4"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}], "-", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                  
                  SubsuperscriptBox["l", "1", "2"], " ", 
                  SubsuperscriptBox["l", "2", "2"], " ", 
                  SubsuperscriptBox["m", "2", "2"]}]}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"g", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
                SubscriptBox["l", "1"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["m", "1"], "+", 
                  SubscriptBox["m", "2"]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
                SubscriptBox["l", "1"], " ", 
                SubscriptBox["l", "2"], " ", 
                SubscriptBox["m", "2"], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Theta]2", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
              ")"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
             SubsuperscriptBox["l", "1", "5"], " ", 
             SubscriptBox["l", "2"], " ", 
             SubscriptBox["m", "1"], " ", 
             SubscriptBox["m", "2"]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubscriptBox["m", "1"], " ", 
                SubscriptBox["m", "2"]}], "+", 
               RowBox[{
                SubsuperscriptBox["l", "1", "4"], " ", 
                SubsuperscriptBox["m", "2", "2"]}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
                SubsuperscriptBox["l", "1", "2"], " ", 
                SubsuperscriptBox["l", "2", "2"], " ", 
                SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]]}], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubscriptBox["m", "1"], " ", 
            SubscriptBox["m", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "5"], " ", 
            SubscriptBox["l", "2"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "3"], " ", 
            SubsuperscriptBox["l", "2", "3"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
            SubsuperscriptBox["l", "1", "3"], " ", 
            SubsuperscriptBox["l", "2", "3"], " ", 
            SubsuperscriptBox["m", "2", "2"]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubscriptBox["m", "1"], " ", 
               SubscriptBox["m", "2"]}], "+", 
              RowBox[{
               SubsuperscriptBox["l", "1", "4"], " ", 
               SubsuperscriptBox["m", "2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], "2"], " ", 
               SubsuperscriptBox["l", "1", "2"], " ", 
               SubsuperscriptBox["l", "2", "2"], " ", 
               SubsuperscriptBox["m", "2", "2"]}]}], ")"}], "2"]]}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Input",
 CellChangeTimes->{{3.847776189391345*^9, 
  3.847776189464836*^9}},ExpressionUUID->"1725153d-7d4d-4401-a2bd-\
2889f75f7713"],

Cell["SIMULATION FOR V INPUT (linearized) WITHOUT LOOP", "Text",
 CellChangeTimes->{{3.717320518423232*^9, 3.7173205260015097`*^9}, {
   3.7173206680478363`*^9, 3.717320685279768*^9}, {3.717320775366974*^9, 
   3.7173207753670177`*^9}, {3.717321166839571*^9, 3.717321167855044*^9}, {
   3.717321215102807*^9, 3.71732121940657*^9}, 3.717851914882493*^9, {
   3.719231496662671*^9, 3.719231581477215*^9}, {3.719232808101083*^9, 
   3.719232822945664*^9}, {3.84761777308683*^9, 
   3.847617807462967*^9}},ExpressionUUID->"80c3c432-8dae-4529-8a60-\
281b82a006a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"some", " ", "initial", " ", "conditions"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ics", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]1", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"Pi", "/", "2"}]}], ",", 
       RowBox[{
        RowBox[{"\[Theta]2", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]2", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"initialy", " ", "with", " ", "no", " ", "controls"}], " ", "-", 
     " ", 
     RowBox[{
     "then", " ", "observe", " ", "the", " ", "behavior", " ", "with", " ", 
      "different", " ", "constat", " ", "controls"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"set", " ", "of", " ", "\"\<nice\>\"", " ", "controls", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["v", "1"], ",", 
         SubscriptBox["v", "2"]}], ")"}]}], "=", 
      RowBox[{"(", 
       RowBox[{"0", ",", "0"}], ")"}]}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.01"}], ",", "0"}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{"0.01", ",", "0"}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{"0", ",", "0.01"}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.1"}], 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", "0"}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.1"}], 
        RowBox[{"Sin", "[", "t", "]"}]}], ",", "0"}], ")"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.1"}], 
          RowBox[{"Cos", "[", "t", "]"}]}], ",", 
         RowBox[{"0.1", 
          RowBox[{"Cos", "[", "t", "]"}]}]}], ")"}], " ", "-", " ", 
       RowBox[{
       "try", " ", "the", " ", "last", " ", "for", " ", "the", " ", "nonzero",
         " ", "initial", " ", "joint", " ", "speed", " ", 
        RowBox[{
         RowBox[{"\[Theta]1", "'"}], "[", "0", "]"}]}]}], "\[Equal]", 
      RowBox[{"-", "0.1"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"newcontr", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"v1", "[", "t", "]"}], "\[Rule]", 
         RowBox[{"-", "0"}]}], ",", 
        RowBox[{
         RowBox[{"v2", "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}]}], ";"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"newcontr", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"v1", "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"-", "0.1"}], "  ", 
         RowBox[{"Cos", "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"v2", "[", "t", "]"}], "\[Rule]", 
        RowBox[{"0.1", "  ", 
         RowBox[{"Cos", "[", "t", "]"}]}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "w", " ", "momencie", " ", "gdy", " ", "sterowanie", " ", "b\:0119dzie", 
      " ", "chcia\[LSlash]o", " ", "wypchn\:0105\[CAcute]", " ", "kulke", " ",
       "w", " ", "niedost\:0119pne", " ", "miejsce"}], ",", " ", 
     RowBox[{"HELIKOPTER", "\[IndentingNewLine]", "v1", " ", "steruje", " ", 
      RowBox[{"(", "g\[LSlash]\[OAcute]wnie", ")"}], " ", "phi2", 
      "\[IndentingNewLine]", "v2", " ", "steruje", " ", 
      RowBox[{"(", "g\[LSlash]\[OAcute]wnie", ")"}], " ", "phi1", 
      "\[IndentingNewLine]", "konkretnie"}], ",", " ", 
     RowBox[{"phi", " ", "=", " ", 
      RowBox[{"ca\[LSlash]ka", 
       RowBox[{"(", "v", ")"}]}]}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"solve", ",", " ", "display", ",", " ", "animate", ",", " ", 
     RowBox[{"plot", " ", "pendulum", " ", "original", " ", "inputs"}]}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmin", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", " ", "=", " ", 
     RowBox[{"First", "[", 
      RowBox[{"NDSolve", "[", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"lineqns", ",", " ", "ics"}], "}"}], " ", "/.", " ", 
          "params"}], " ", "/.", " ", "newcontr"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", "tmin", ",", " ", "tmax"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], " ", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"vq", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<phi1\>\"", ",", "\"\<phi2\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"vq", "'"}], "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<phi1''\>\"", ",", "\"\<phi2''\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Animate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pendulum", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "True"}]}], "\[IndentingNewLine]", "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "tmin", ",", " ", "tmax", ",", " ", ".025"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AnimationRate", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.716113077772964*^9, 3.7161131053374233`*^9}, {
   3.71629150839826*^9, 3.716291538367016*^9}, {3.716635264442958*^9, 
   3.716635268063497*^9}, {3.7166354531953573`*^9, 3.716635563884454*^9}, {
   3.716636609996169*^9, 3.71663661102236*^9}, {3.7171442152844753`*^9, 
   3.717144353007221*^9}, {3.717144424434321*^9, 3.717144494655274*^9}, {
   3.717146233623519*^9, 3.717146239582518*^9}, {3.717164229875228*^9, 
   3.7171642349272823`*^9}, {3.717164286516508*^9, 3.717164322800536*^9}, {
   3.7172082221956863`*^9, 3.717208255434268*^9}, {3.717208354802309*^9, 
   3.717208369391427*^9}, {3.717245331492174*^9, 3.717245359834918*^9}, {
   3.717306893248913*^9, 3.7173068966861553`*^9}, {3.717307033905727*^9, 
   3.717307095653658*^9}, {3.717310204826371*^9, 3.717310245234131*^9}, {
   3.7173214674043903`*^9, 3.717321469438703*^9}, 3.7178295938008432`*^9, {
   3.719232857882083*^9, 3.719232959584692*^9}, {3.719232992992176*^9, 
   3.719233082246705*^9}, {3.7192332169343863`*^9, 3.7192332644507837`*^9}, {
   3.7192350971874332`*^9, 3.7192352384976892`*^9}, {3.719235674302458*^9, 
   3.7192357345728416`*^9}, 3.7192357762469063`*^9, {3.7192358081451473`*^9, 
   3.719235836964118*^9}, 3.7192358865094967`*^9, {3.719235935197735*^9, 
   3.719235937897976*^9}, {3.719235986976079*^9, 3.719235987373907*^9}, {
   3.719282862685137*^9, 3.7192829781477833`*^9}, 3.719285085199452*^9, {
   3.719285381292004*^9, 3.719285407682851*^9}, {3.71928557534101*^9, 
   3.719285583050872*^9}, {3.7192859320431957`*^9, 3.7192859623560266`*^9}, {
   3.719286017656742*^9, 3.719286036774477*^9}, {3.719286115672256*^9, 
   3.71928615174439*^9}, {3.71928631328653*^9, 3.7192863512666388`*^9}, {
   3.719286399055382*^9, 3.7192864733398647`*^9}, {3.719286553412798*^9, 
   3.719286594502466*^9}, {3.719286625520933*^9, 3.719286634523074*^9}, {
   3.719286669800151*^9, 3.719286672570714*^9}, {3.719287116108232*^9, 
   3.719287220315748*^9}, 3.719287476773548*^9, {3.719287520290566*^9, 
   3.719287545280024*^9}, {3.719287577822905*^9, 3.719287578961966*^9}, {
   3.719287647315696*^9, 3.7192878885020638`*^9}, {3.71928805017832*^9, 
   3.719288059965193*^9}, {3.719289649129531*^9, 3.719289653039311*^9}, {
   3.719289697807293*^9, 3.719289752879438*^9}, {3.719289804958396*^9, 
   3.719289805918726*^9}, {3.7193232599672613`*^9, 3.719323327956297*^9}, {
   3.847613289896006*^9, 3.8476133138924522`*^9}, {3.8476133465270505`*^9, 
   3.8476133548126106`*^9}, {3.8476134502149763`*^9, 
   3.8476134634214687`*^9}, {3.8476135002226324`*^9, 
   3.8476135782141495`*^9}, {3.8476136161672173`*^9, 3.84761366568015*^9}, {
   3.847613708739156*^9, 3.847613714850481*^9}, {3.847613868453762*^9, 
   3.847613873688323*^9}, {3.8476140350332856`*^9, 3.8476141738511086`*^9}, {
   3.8476143710530057`*^9, 3.847614534741315*^9}, {3.8476146436167326`*^9, 
   3.8476146443836803`*^9}, {3.847621291378669*^9, 3.8476212918150244`*^9}, {
   3.847621425856484*^9, 3.847621446650338*^9}, {3.8476232949634066`*^9, 
   3.847623334332021*^9}, {3.847623458317808*^9, 3.847623464829045*^9}, {
   3.8476234951286154`*^9, 3.8476235417264595`*^9}, {3.8477100288730216`*^9, 
   3.8477100462740602`*^9}, {3.847775652417177*^9, 3.847775664237529*^9}, {
   3.847775721993779*^9, 3.847775753535489*^9}, {3.847775790841962*^9, 
   3.847775791991302*^9}, {3.8477759134290447`*^9, 3.847775931349359*^9}, {
   3.847776033702957*^9, 3.8477760686668673`*^9}, {3.847776228537608*^9, 
   3.847776350533916*^9}, {3.847776406224362*^9, 3.847776549059492*^9}, {
   3.847776581769371*^9, 3.847776667179522*^9}, {3.8477767489645443`*^9, 
   3.847776755530761*^9}, {3.8477769238984833`*^9, 3.847776927126938*^9}, {
   3.847777000402191*^9, 3.847777036790187*^9}, {3.847777153771676*^9, 
   3.847777251410654*^9}, {3.8477773061958427`*^9, 3.847777315386527*^9}, {
   3.847778850806239*^9, 3.8477788992111893`*^9}, {3.847779059705455*^9, 
   3.84777910283193*^9}},
 Background->RGBColor[1., 1., 0.85],
 CellLabel->
  "In[975]:=",ExpressionUUID->"2a321c77-db4c-4e0e-9fd0-891018e37038"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$48555#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
t1yjHBvnlZfW1qhQWn74vOvZcvwf2Yw3RA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$48555#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 20}, {-0.184133649660297, 1.7549299764551998`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"phi1\"", "\"phi2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.847776523429699*^9, {3.847776612436789*^9, 3.847776641281798*^9}, {
   3.847776752926093*^9, 3.847776756949032*^9}, 3.847776927682063*^9, {
   3.84777700176582*^9, 3.847777037791197*^9}, 3.8477771477340727`*^9, {
   3.8477771981910553`*^9, 3.847777210403613*^9}, {3.847777247133164*^9, 
   3.847777251826028*^9}, 3.8477773169416018`*^9, {3.847778851896503*^9, 
   3.847778899570373*^9}, {3.847779082585293*^9, 3.847779103446748*^9}},
 CellLabel->
  "Out[980]=",ExpressionUUID->"ee39c2f1-7720-4a99-92b1-9dc7e9e143b9"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
kvr43r7HjGkqjGl6xG2+QqBq/t3bzOaoYNWy5N59lUD7b2rX+i5SgW/w5Vc7
fwI1LNIPp3PQYMiLMlR8nUD6ntQPL7hoULJuPrMmgNTfw4qnB1fTYN2X5E0p
QQQ6ZiszxMNNg+CXTdZbQwjU8Un8MoOXBjF6X4JSQgl00mjjoik/DXxvRt6t
DSNQd/2Gm75CNAjUF2KW3iTQ6V3cAukiNKieVelzDCfQz7KVqS/EaHClbg38
IPFZ5WWFQQka/G493CUXQaDhtNliHhkaHDQXfa1KYreNE9sZ8jQ43/VHZpa0
H4v6U2dKoUF739up/7+3eHEOGfqq0MBto/aZITLejE/PxzQaDZhCApfXk9h/
9OuZFxo0uHu39eAEmS/H2c7hAU0apLiZjj4i6wnpfu/Jo02DIqfVN8WDCbT2
xJsl+g4amF6oUjgZSKCo16/CTXfTIO5Cy39WN8j5Q52gL6LBfy6rOpSvESie
XXU/bT8NdK+Uilb5knxQIygvDtLgcGncSxEfkg+PykoH9Ggwub9nersXgaTE
i3byGNKgzeX0a7lLBMqMy6mnH6VB/0Vt0w43kg/XUjuvmtIgIFZi/a1zJB8m
Eu3STtIgJ+Cva4o9gUpd4kbqLGlguD5/wfk0gQjzUA4eOxpICtRsPGtG8qH1
RiTdkQYHFkq/xB0n+aDjK2zqRIPUSi+dEENy/gx35TQ3GmS5vfJ+uY9ABnnO
5XUXaVDGn3ZNaDeB3kg57B7wpMHjb18yVbXJea+3OEb3I+crKFfHVCFQT99+
n7qbNBBJcJ7ZxUfyK731oWoUDVovH/9vy2oCZZw89SY+lgbTGwJD/yyykU3z
RTn7RBpYLSs+zyLXZ1dpRgvXIxoMrn02J/uKjXa40KbP59CANrPzP8XnbJQi
/0S2I58GWmIzs7/K2cgsqc07q5QGJyxkw/EDNnrvtyRzsJr0T2PYRniwEWNr
5OHHtTSwpCZqZzmwUdyfjd4bX9LAfFiiOegkGxnZqjX3NdPg1r+FFdGIjZp0
rbzCPtNgqWTmagc3G9UJVL5+NUEDquXwG9ckFpJtPjihMUODl6xOzm9hLBQQ
8k4qZZ7km9zEuY1XWGjv9OBlJ041kPfmK+gyY6HKblGpdfxqcPtJ17WXQuT+
met1yYCqBhFun2OPBzORgO2KB+XqalDSbzFyzIOJPMRjXolrqgGm5RzebM1E
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
epwyu7ysBeGBuUYX5djofzCjP7A=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$48635#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rpugzK2s6MBoaL6JlzwL/w94aUd/
          "]]}, 
        Annotation[#, "Charting`Private`Tag$48635#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 20}, {-0.09193707026037885, 0.09193707026037928}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"phi1''\"", "\"phi2''\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.847776523429699*^9, {3.847776612436789*^9, 3.847776641281798*^9}, {
   3.847776752926093*^9, 3.847776756949032*^9}, 3.847776927682063*^9, {
   3.84777700176582*^9, 3.847777037791197*^9}, 3.8477771477340727`*^9, {
   3.8477771981910553`*^9, 3.847777210403613*^9}, {3.847777247133164*^9, 
   3.847777251826028*^9}, 3.8477773169416018`*^9, {3.847778851896503*^9, 
   3.847778899570373*^9}, {3.847779082585293*^9, 3.84777910352838*^9}},
 CellLabel->
  "Out[981]=",ExpressionUUID->"39c0824a-0494-4ea6-9d91-714851b58a7d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0.6000000000000001, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 20, 0.025}}, Typeset`size$$ = {
    360., {180., 186.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$48699$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$48699$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        $CellContext`pendulum[$CellContext`t$$], 
        PlotRange -> {{-2, 2}, {-2, 2}}, Axes -> True], 
      "Specifications" :> {{$CellContext`t$$, 0, 20, 0.025, AnimationRate -> 
         1, AnimationRunning -> False, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{407., {215., 222.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.847776523429699*^9, {3.847776612436789*^9, 3.847776641281798*^9}, {
   3.847776752926093*^9, 3.847776756949032*^9}, 3.847776927682063*^9, {
   3.84777700176582*^9, 3.847777037791197*^9}, 3.8477771477340727`*^9, {
   3.8477771981910553`*^9, 3.847777210403613*^9}, {3.847777247133164*^9, 
   3.847777251826028*^9}, 3.8477773169416018`*^9, {3.847778851896503*^9, 
   3.847778899570373*^9}, {3.847779082585293*^9, 3.847779103552813*^9}},
 CellLabel->
  "Out[982]=",ExpressionUUID->"8295c4a8-d178-4259-a86f-c1b1ece664c0"]
}, Open  ]],

Cell["SIMULATION FOR V INPUT (linearized) WITH CLOSED LOOP", "Text",
 CellChangeTimes->{{3.717320518423232*^9, 3.7173205260015097`*^9}, {
   3.7173206680478363`*^9, 3.717320685279768*^9}, {3.717320775366974*^9, 
   3.7173207753670177`*^9}, {3.717321166839571*^9, 3.717321167855044*^9}, {
   3.717321215102807*^9, 3.71732121940657*^9}, 3.717851914882493*^9, {
   3.719231496662671*^9, 3.719231581477215*^9}, {3.719232808101083*^9, 
   3.719232822945664*^9}, {3.7192880264751787`*^9, 3.719288030349571*^9}, {
   3.847617816350417*^9, 
   3.8476178331433997`*^9}},ExpressionUUID->"7bf8e818-f799-4032-bece-\
3dfb756da2cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"some", " ", "initial", " ", "conditions"}], " ", "-", " ", 
    RowBox[{"just", " ", "repeated", " ", "for", " ", "convenience"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ics", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]1", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"Pi", "/", "2"}]}], ",", 
       RowBox[{
        RowBox[{"\[Theta]2", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]2", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"the", " ", "desired", " ", "trajectory"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vyd", "[", "t_", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.3", "+", 
        RowBox[{"0.3", 
         RowBox[{"Cos", "[", "t", "]"}]}]}], ",", 
       RowBox[{"0.3", "+", 
        RowBox[{"0.3", " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vyd", "[", "t_", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"coordinates", " ", "of", " ", "destination", " ", 
      RowBox[{"trajectory", ":", " ", "x"}]}], ",", "y"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"the", " ", "loop"}], " ", "-", " ", 
     RowBox[{"PD", " ", "controller"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"K1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";", "      ", 
    RowBox[{"(*", " ", 
     RowBox[{"the", " ", "gain", " ", "matrices"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"K0", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"dla", " ", "K1"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "}"}], " ", "znowu", " ", 
       "dostajemy", " ", "osobliwo\:015b\[CAcute]", "\[IndentingNewLine]", 
       "du\:017ce", " ", "warto\:015bci", " ", 
       RowBox[{"np", ".", " ", "K1"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"200", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], " ", "powoduja", " ", 
       "przesuniecie", " ", "faktycznej", " ", "trajektorii"}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "kt\[OAcute]ra", " ", "z", " ", "czasem", " ", "zbiega", " ", "do", " ",
        "tej", " ", "faktycznej", "\[IndentingNewLine]", "zaczyna", " ", 
       "kr\:0119ci\[CAcute]", " ", "k\[OAcute]\[LSlash]ka", " ", 
       RowBox[{"np", ".", " ", "na"}], " ", "koordynatach"}], " ", "-", "1"}],
      ",", 
     RowBox[{
     "1", " ", "i", " ", "powoli", " ", "przesuwa", " ", "si\:0119", " ", 
      RowBox[{"(", 
       RowBox[{"jako", " ", "ca\[LSlash]o\:015b\[CAcute]"}], ")"}], " ", "do",
       " ", "faktycznej", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"200", ",", "0"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], " ", "przesuwa", " ", "w", " ", 
      RowBox[{"prawo", ".", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "200"}], "}"}], " ", "przesuwa", " ", "w", " ", 
      "d\[OAcute]\[LSlash]", "\[IndentingNewLine]", "Umiarkowane", " ", 
      "warto\:015bci", " ", "przy\:015bpieszaj\:0105", " ", "stabilizacje", 
      " ", "na", " ", "wybranej", " ", "trajektorii"}]}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pdscheme", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"vyd", "''"}], "[", "t", "]"}], "-", 
      RowBox[{"K1", ".", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"vk2", "'"}], "[", "t", "]"}], "-", 
         RowBox[{
          RowBox[{"vyd", "'"}], "[", "t", "]"}]}], ")"}]}], "-", 
      RowBox[{"K0", ".", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"vk2", "[", "t", "]"}], "-", 
         RowBox[{"vyd", "[", "t", "]"}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"loop", "=", 
     RowBox[{"Apply", "[", 
      RowBox[{"Rule", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"vv", "[", "t", "]"}], ",", "pdscheme"}], "}"}], "//", 
        "Transpose"}], ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"solve", ",", " ", "display", ",", " ", "animate", ",", " ", 
     RowBox[{"plot", " ", "pendulum", " ", "original", " ", "inputs"}]}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "...", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmin", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", " ", "=", " ", 
     RowBox[{"First", "[", 
      RowBox[{"NDSolve", "[", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"lineqns", ",", " ", "ics"}], "}"}], " ", "/.", " ", 
          "loop"}], " ", "/.", " ", "params"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", "tmin", ",", " ", "tmax"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"vq", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<phi1\>\"", ",", "\"\<phi2\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"vq", "'"}], "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<phi1''\>\"", ",", "\"\<phi2''\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"expectedTrajectory", "[", "t_", "]"}], " ", ":=", " ", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"Blue", ",", " ", 
       RowBox[{"Line", "[", "\[IndentingNewLine]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"vyd", "[", "#", "]"}], "/.", " ", "sol"}], "]"}], "]"}],
           ",", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "t", ",", " ", "0.025"}], "]"}]}], "]"}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"trace", "[", "t_", "]"}], " ", ":=", " ", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"Purple", ",", " ", 
       RowBox[{"Line", "[", "\[IndentingNewLine]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"vk2", "[", "#", "]"}], "/.", " ", "params"}], "/.", 
             "sol"}], "]"}], "]"}], ",", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "t", ",", " ", "0.025"}], "]"}]}], "]"}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"Animate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pendulum", "[", "t", "]"}], ",", 
         RowBox[{"expectedTrajectory", "[", "t", "]"}], ",", 
         RowBox[{"trace", "[", "t", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "True"}]}], "\[IndentingNewLine]", "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "tmin", ",", " ", "tmax", ",", " ", ".025"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AnimationRate", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.716113077772964*^9, 3.7161131053374233`*^9}, {
   3.71629150839826*^9, 3.716291538367016*^9}, {3.716635264442958*^9, 
   3.716635268063497*^9}, {3.7166354531953573`*^9, 3.716635563884454*^9}, {
   3.716636609996169*^9, 3.71663661102236*^9}, {3.7171442152844753`*^9, 
   3.717144353007221*^9}, {3.717144424434321*^9, 3.717144494655274*^9}, {
   3.717146233623519*^9, 3.717146239582518*^9}, {3.717164229875228*^9, 
   3.7171642349272823`*^9}, {3.717164286516508*^9, 3.717164322800536*^9}, {
   3.7172082221956863`*^9, 3.717208255434268*^9}, {3.717208354802309*^9, 
   3.717208369391427*^9}, {3.717245331492174*^9, 3.717245359834918*^9}, {
   3.717306893248913*^9, 3.7173068966861553`*^9}, {3.717307033905727*^9, 
   3.717307095653658*^9}, {3.717310204826371*^9, 3.717310245234131*^9}, {
   3.7173214674043903`*^9, 3.717321469438703*^9}, 3.7178295938008432`*^9, {
   3.719232857882083*^9, 3.719232959584692*^9}, {3.719232992992176*^9, 
   3.719233082246705*^9}, {3.7192332169343863`*^9, 3.7192332644507837`*^9}, {
   3.7192350971874332`*^9, 3.7192352384976892`*^9}, {3.719235674302458*^9, 
   3.7192357345728416`*^9}, 3.7192357762469063`*^9, {3.7192358081451473`*^9, 
   3.719235836964118*^9}, 3.7192358865094967`*^9, {3.719235935197735*^9, 
   3.719235937897976*^9}, {3.719235986976079*^9, 3.719235987373907*^9}, {
   3.719282862685137*^9, 3.7192829781477833`*^9}, 3.719285085199452*^9, {
   3.719285381292004*^9, 3.719285407682851*^9}, {3.71928557534101*^9, 
   3.719285583050872*^9}, {3.7192859320431957`*^9, 3.7192859623560266`*^9}, {
   3.719286017656742*^9, 3.719286036774477*^9}, {3.719286115672256*^9, 
   3.71928615174439*^9}, {3.71928631328653*^9, 3.7192863512666388`*^9}, {
   3.719286399055382*^9, 3.7192864733398647`*^9}, {3.719286553412798*^9, 
   3.719286594502466*^9}, {3.719286625520933*^9, 3.719286634523074*^9}, {
   3.719286669800151*^9, 3.719286672570714*^9}, {3.719287116108232*^9, 
   3.719287220315748*^9}, 3.719287476773548*^9, {3.719287520290566*^9, 
   3.719287545280024*^9}, {3.719287577822905*^9, 3.719287578961966*^9}, {
   3.719287647315696*^9, 3.7192878885020638`*^9}, {3.719288116990617*^9, 
   3.719288119682036*^9}, {3.719288204544853*^9, 3.719288365589427*^9}, {
   3.719288519020309*^9, 3.719288671688119*^9}, {3.7192887843544197`*^9, 
   3.71928881845098*^9}, {3.7192888772509327`*^9, 3.7192889897101727`*^9}, {
   3.719289023953945*^9, 3.719289056602311*^9}, {3.719289982185445*^9, 
   3.7192899875746202`*^9}, {3.719306167967877*^9, 3.7193061684462633`*^9}, {
   3.719322271969171*^9, 3.719322277727944*^9}, {3.71932236729242*^9, 
   3.719322367748279*^9}, {3.719322427999549*^9, 3.719322428923428*^9}, {
   3.719322467951036*^9, 3.719322495284998*^9}, {3.719323351645751*^9, 
   3.719323361339731*^9}, {3.847616258777976*^9, 3.8476162869174013`*^9}, {
   3.8476163293114595`*^9, 3.8476163365592136`*^9}, {3.8476164468312635`*^9, 
   3.8476164577482705`*^9}, {3.847616628851471*^9, 3.8476167684938426`*^9}, {
   3.8476168125082664`*^9, 3.8476168339578967`*^9}, {3.847622630586268*^9, 
   3.847622632884198*^9}, 3.8476226675202274`*^9, {3.847622934653863*^9, 
   3.847623025152283*^9}, {3.847623063677459*^9, 3.8476230781775084`*^9}, 
   3.8476231102554264`*^9, {3.8476231563757086`*^9, 3.847623191151451*^9}, {
   3.8476232225242395`*^9, 3.8476232639989853`*^9}, {3.8477100650591955`*^9, 
   3.847710076397663*^9}, {3.847776801029269*^9, 3.847776817624222*^9}, {
   3.8477769117305307`*^9, 3.8477769124959497`*^9}, {3.847777353642733*^9, 
   3.8477774408197803`*^9}, 3.847777496801581*^9, {3.847777552866803*^9, 
   3.847777725977844*^9}, {3.8477778744598827`*^9, 3.847777929072824*^9}, {
   3.847777963908209*^9, 3.847778000783511*^9}, {3.847778048051424*^9, 
   3.847778435470331*^9}, 3.847779192010892*^9, {3.8477792313679457`*^9, 
   3.847779238615466*^9}},
 Background->RGBColor[1., 1., 0.85],
 CellLabel->
  "In[1023]:=",ExpressionUUID->"91de1b7d-111f-4d94-8333-0fa7521badf5"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwc2Xk8VF8bAHDMjH3fyb4MBmNGtlTu81MUaROVkrJkS4oioVKJkCUJIVSk
okj2bNkjS5YsabVF9i2799z3L5/vZ+bee+45z3me5wxZuwvmZ5kYGBh+EhkY
8L+Pr9sx0x0SDSrpuy1WZZexmg4Zs2MyVzHxOE9nHbllbLOu/LaMTAj2RWZI
fASZO7ogh70nGqucXs/mVFjGHleGS5NkHmHyu9VdnisuY2pTDhGbTilYEHEk
8J3SMvaNO3ljrfsplvzdH9tKWcYUnrPprKymY4Y1WzsU1Jcxt51e5/9Jv8Q+
Sxz0CaYtY+86f6bN78rC0hTh7AmtZWzlnFn/jFM2Zt+d0JKkt4ylMvaH/DN6
i4WEU0f271zGdjffV1zszsWwLWI/3QyXsT/xez7Mu+RhUy7zf5b2LGP3HNat
51bzsY6Ipxoz+5exjlXnmGnpYoxmo6wkf3IZ866Xok29LcFcm/TVT9otY+IP
OpsmdpViG/XPtqy5LGN2FCD8darAmFY3Dnj5LqO/vq3z/pXYlQr7n/tuL2Od
Py0l540+YM1XpeeC7y1jPlkcxbPdVZigYJeaeuoyZho9zDybWo35rzkmxLxa
xiR8PljMuNRgN/iyhW3yl7HKXVemp1ZrsfAfVdUCn5Yxlq+/lSakP2ITW/9L
nllfxnoqy7zG/3zEtKNWNA9zrGCvnsdX/33biKW9eD/AIbaCHfA8cHps1ycs
wJpVNlJ7BYtlK4kdcWrFLtk6dOR5rmB5V0w9L4m2YQ2Ot3m6bq1gSWO6YnP+
bdioMtdNkwcrmHsbv9Os0WeMV+1Ogmr+Csaf1MA0092Oldp/GCpdW8FWuQte
XtzRgZ0838DixLOKDd58dmg6tQOrHg9OspFbxQqcridPuXRiO7bXfdQ0WcVO
bNXSn1ztwsICgP14wir2pDHF4690LyZQy9v73WQNm4/Pp/y414t90220nLVb
w4ydmgbal3ux8GSvc4f917Bxwj/Lko4+7I/Mp72T2WuY3s4D+iHB/dg369/i
QeLrWFv2GpPS1A9sR+JPmT1r69iNRjVT+ukBLOoh3Howtom9yQ756kYdw9ZL
1wsvCTPBGP/YPVPbMUzlP5mIl2QmUPI2NVCOGcMsYt9mfNVhgtQdHE8Glsew
jVcqzfRjTBD98Z7jidq/mDp/0dj9OCbwHoic2WM9gen5u/LfEiZArvH0U8XI
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
eiG6XGYin5qi8MSrW4b+H+wsNec=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$50084#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/YOO3Imcmc0fQSzzmb2fnv1BUsMVvie/j6DkQzVMBRV/UOGpyRq32RFUKyVk
FDP3B3XYZGcSdUeR6pOn1WZ2f1F6oN4G66JRVMnZMKJ35i/ae2RG2qRtFDl4
znIqR+HfZYpEK2dHUbSmoQX7h7+Ieq9a57TGGJp439JUIbOAkhvck/c9HEPh
hMXpl3oLqLDaZDT7wxiSCiEIPTy4gBg9mgORP8eQham7zdWwBfTCTMJgmnsc
5TWtdhgMLyBVeyut3T7jyFRbYYnMtIgumOhdXrw+jn4lmElJSiyiybQPH3TS
xhHfkXjHBfNFlK7bJ7O/bhx5D6r0v85fREwiVk/ZZScQzbFjY/nXRZQYMiZe
qjOBrNojKfUDi4j1dr/nhPkE0qsbDhiU/IcO7S0Jyj87gZ4bJ6ZP6/xDfYoz
WTsjJhCh1LRq5cA/VP9vNXJf8gRifZktIBrxD+m9Kk1oKJ1AF8g2usTMf+hV
o7KVUdMEGnm0wYHy8R/6lZ41T+2bQA33Tjwxnf2Huu3PmvozM1BSkJzhxWNL
KGiSFlduwEBcf5pOhAUuIen8uRYOMwa67BN843bCEmq96ixXa8NAzs69rU/q
llDlgkNZpRcDtXbd+vdqaAnpXn3CterPQLtsDGXLmJeReNUDyzdhDKS2+4FH
+9Zl5DGaPJueyEBp5RZ3BiyXkXPOolNrBgNtMlgumvJaRuSyR3ORzxgo/PXz
7uXIZRT1bgBKXzLQH/UjLJxZy2jxP2LXuXcM5P6ES1nk0zK6xVx5JK+Mgbpl
S/bKdS4jteXNjm7VDFQuJHFfX2AFbXURcHFrYaAtMTWlJqor+D0b8/LbGegx
u//AQdMVFGRpwBLYw0ASwUpcjsdXkLWKFm9dHwNFL/7QOB20gl7cYQ/MHGSg
Vb/rNhcSV9CiyfG/TKMMdGZC51Jo4Qoy4o3VHR5noIGTgxm36lcQV0PAuM1v
BrLtjf+SPLKC3h6M+rZ3ioFq7IwnHrOuoifCaXGN0wxk0Dy76RVhFW0W/b3Q
NcNA+Xsebf2kv4rO0ZY+nJ1lINkqy6N11qtIiyk6LRE7zpAl7KfPKupLLDm2
G5vt7cun/VGrSJF9vvI6ft5f83jDZPYqul4/Em+F3z+WIzC3VLaKVrz9kgom
GchBoUxiY/cqumYcnZzCYKDGBz5I+O8qWgzc4SaO579TTOakrOAayn4f30Qa
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
q++Goo7FzP8D3a6RAw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$50084#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 20}, {0., 2.945522613931517}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"phi1\"", "\"phi2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.847616349944755*^9, {3.847616448742136*^9, 3.847616458252432*^9}, 
   3.847616771998564*^9, 3.8476168344740257`*^9, 3.847621509905251*^9, 
   3.8476226687664604`*^9, 3.847622942905468*^9, {3.84762297562466*^9, 
   3.8476229991492643`*^9}, 3.8476230786681943`*^9, 3.847623110780528*^9, {
   3.8476231585603848`*^9, 3.8476231920256376`*^9}, {3.8476232244685793`*^9, 
   3.8476232421314125`*^9}, 3.847710076842549*^9, 3.847710143298047*^9, {
   3.847776828956808*^9, 3.8477768359697037`*^9}, 3.847776913749111*^9, {
   3.8477773544785624`*^9, 3.847777441288918*^9}, 3.847777497648999*^9, 
   3.847777553435197*^9, {3.847777628230981*^9, 3.847777726416288*^9}, {
   3.847777875287149*^9, 3.847777932022113*^9}, 3.847777970692515*^9, 
   3.8477780013090363`*^9, {3.847778048797662*^9, 3.8477780900125*^9}, 
   3.8477782747200613`*^9, {3.8477783264627333`*^9, 3.847778390561885*^9}, 
   3.8477784360923634`*^9, 3.8477791440642033`*^9, 3.847779192583971*^9, {
   3.8477792343713617`*^9, 3.847779238925502*^9}},
 CellLabel->
  "Out[1032]=",ExpressionUUID->"e447d071-6c9e-4e44-bd03-6500d12f0089"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{{4.0816326530612243`*^-7, 1.3327882971941158`*^-6}, {
          0.006134358411192534, 0.018347614498923283`}, {
          0.012268308659119763`, 0.03657727949821348}, {0.02453620915497422, 
          0.07269106516064278}, {0.028360051328464825`, 
          0.08372494504187893}}], 
         LineBox[{{3.6549088056149794`, -0.06821749756640673}, {
          3.6606909263774345`, -0.06507210855069308}, {
          3.6673230609043, -0.061555139732600586`}, {
          3.673955195431165, -0.05805227060172213}, {
          3.687219464484895, -0.05109056610148951}, {
          3.7137480025923555`, -0.037355065306345726`}, {
          3.766805078807276, -0.010724820008558757`}, {
          3.773437213334141, -0.007482202748676064}, {
          3.780069347861006, -0.00425991672388208}, {3.7933336169147363`, 
          0.0021223036010800424`}, {3.8198621550221965`, 
          0.014628160650789547`}, {3.872919231237117, 0.03853708485616707}, {
          3.879551365763982, 0.041416765305408915`}, {3.886183500290847, 
          0.04427135512312131}, {3.8994477693445773`, 
          0.049904272233233724`}, {3.9259763074520375`, 
          0.06085841833729972}, {3.979033383666958, 0.08147147941616595}, {
          3.985130053124588, 0.08372494504187893}}], 
         LineBox[CompressedData["
1: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
E/cKo+bf8n9XV1nwudI55yJdGP0PvfJrZw==
          "]], 
         LineBox[{{1.7912026527620502`, 0.08372494504187893}, {
          1.8164611797703716`, 0.06200408297263886}, {1.8230645611263983`, 
          0.05653699096968283}, {1.8296679424824247`, 0.05111337057374009}, {
          1.842874705194478, 0.04039228921312859}, {1.8692882306185843`, 
          0.019427056760150555`}, {
          1.9221152814667968`, -0.020801935426496842`}, {
          1.9888843692959777`, -0.06821749756640673}}]}, 
        Annotation[#, "Charting`Private`Tag$50164#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAnX5iBjFkmz4A4OGyhn/QPMTTIExX
IHk/NUl4gV2Tsz7/xr6DICCJP/zKdbnpj+E+DpK2sArYkj83TkL/je/8Pp3A
jR8FIJk/0m4fve8OET8s72SO/2efP+8JA2uFkiA/3Q6e/vzXoj80EzmN1XIs
PySmCTb6+6U/PgYg6g1/Nj9sPXVt9x+pP6+GGjTAskA/s9TgpPRDrD862aDd
yqRHP/prTNzxZ68/XhznHHogUD+gAdyJ90WxP9SEaVEMWFU/RM2RJfbXsj+y
/5i9TY1bP+iYR8H0abQ/HzgFLwFqYT+MZP1c8/u1P3dkCwE9oGU/MDCz+PGN
tz9U3aif/nFqP9P7aJTwH7k/EjSGkkDobz92xx4w77G6P5R+74+VBXM/GpPU
y+1DvD98aUyP/nF2P75eimfs1b0/UDwXOUk9ej9iKkAD62e/P884ODpKa34/
Avt6z/R8wD9/jQ5s6X+BP9TgVR30RcE/sYjTLD7/gz94rAu58tfCP/kblKP2
o4k/SpLmBvKgwz/w30Ekn8yMPxx4wVTxacQ/uE02qG4YkD/uXZyi8DLFP0YK
GJQU6ZE/wEN38O/7xT9LErOm8tiTP5IpUj7vxMY/pZbpP7HolT9kDy2M7o3H
P/hwZCnzGJg/B9viJ+0fyT/0TcUfVt2cP9jAvXXs6Mk/ePgT7Ixynz+qppjD
67HKPz8f5BE7FaE/TnJOX+pDzD+mD+xSGQKkPyBYKa3pDM0/RAA8nm6TpT/y
PQT76NXNP7ZKX4HzNqc/lgm6ludnzz+YoKWFOLWqP7R3SnJzGNA/1Dn71UWQ
rD+c6jcZ83zQPw6gvEIcfq4/btASZ/JF0T8ApjzASkmxP8PeGnEfttI/03PQ
fP9utT8JqkYj
          "]], 
         LineBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAA92/MWV8ODUCRCxCxs3axv7FwDFMY
SQ1As5XKDukMrL/MmhN5rVYNQD5Q1viLhaq/5sQan0JkDUCrC6nURwCpvxoZ
Ketsfw1AosWoxxj8pb+EwUWDwbUNQMiuSyh/DaC/VhJ/s2oiDkBi9nYVk2iC
v3A8htn/Lw5A1usIoAaveb+KZo3/lD0OQDgrUSyBPm2/v7qbS79YDkCQbaBK
jyNdPyhjuOMTjw5ApLc9aY4ciT/6s/ETvfsOQMjaTUTHkKA/FN74OVIJD0Cx
ip0DDc+hPy4IAGDnFg9AoFwZ1dsKoz9jXA6sETIPQDyDZ+MJe6U/zAQrRGZo
D0AoIZuvWz2qP55VZHQP1Q9AEsdVhbmjsT+4f2uapOIPQFd2K4mBLrI/06ly
wDnwD0BogCYz+LeyPwR/QAayBRBAJOGv9OvGsz+IADZbmhsQQNNz0Hz/brU/
wp6VKQ==
          "]], 
         LineBox[CompressedData["
1:eJwBwQM+/CFib1JlAgAAADsAAAACAAAApFIa41cVFUDTc9B8/261PyZ0ZnhU
KhVAEbxIiBpatD8tOt9TnzAVQOp85iBmBbQ/NABYL+o2FUBVGU7glLCzP0KM
SeZ/QxVAo81uRqcGsz9epCxUq1wVQGMyjuvusbE/ltTyLwKPFUDSv+lm7A6u
PwU1f+ev8xVAWGaCRtyBoz8M+/fC+vkVQI3vf/y126I/EsFwnkUAFkBvKZSc
/DWiPyBNYlXbDBZANb+01eLroD88ZUXDBiYWQO7ZYQQhu5w/dJULn11YFkDw
sqihaLiSP+T1l1YLvRZAMNnXHsq4Lb+iQTNz3cMWQCzmxhlbTFe/X43Oj6/K
FkAC0YwnvV9lv9okBclT2BZAfm3T01hPdL/RU3I7nPMWQDtlF5JbkYO/vrFM
IC0qF0CAmh74tsCSv3z95zz/MBdApzcUwpPUk785SYNZ0TcXQMzQnvri5ZS/
tOC5knVFF0BG2auvwgCXv6oPJwW+YBdA6p/60fQWm7+XbQHqTpcXQL2/c1aD
YKG/VLmcBiGeF0BK+N6039ShvxIFOCPzpBdApJLTQNFHor+OnG5cl7IXQMAm
pT5tKaO/hMvbzt/NF0COrd00Xtukv0IXd+ux1BdA+wvM5zhEpb//YhIIhNsX
QKVXqkedq6W/evpIQSjpF0A8lApx/nWmv3AptrNwBBhAvBwkggb5p78udVHQ
QgsYQGkiLPcRVqi/68Ds7BQSGEBH6Bmzn7Gov2ZYIya5HxhAG/nYfT9kqb9d
h5CYATsYQPq150KCt6q/SuVqfZJxGEC39OfU1hWtv0Z9I6xEeBhAKUVKKJxZ
rb9CFdza9n4YQJFqwKjum62/OkVNOFuMGEC+U+dcPByuvyqlL/MjpxhAnELB
pIULr78mPegh1q0YQGgxbhW/Q6+/ItWgUIi0GED0A/9eiXqvvxoFEq7swRhA
YMDUQ9Pjr78LZfRotdwYQGghwCWpUrC/CP2sl2fjGEBpst4UFGmwvwSVZcYZ
6hhAPN5rzcp+sL/8xNYjfvcYQDxM5bYdqLC/+FyPUjD+GECTXkYEu7uwv/T0
R4HiBBlAg/jWU6bOsL/sJLneRhIZQA/nhm1p8rC/6LxxDfkYGUA6QuV+QgOx
v+RUKjyrHxlAgVNdIGwTsb/chJuZDy0ZQBU/Y9izMbG/2BxUyMEzGUB2jKNd
0z+xv9S0DPdzOhlAHHZiUEZNsb/M5H1U2EcZQAGQ5ZEpZrG/yHw2g4pOGUDg
mLx2m3Gxv2yJ8GW0URlAkQsQsbN2sb8QHcV7
          "]], 
         LineBox[CompressedData["
1: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
wGdjr+1Wdw56MhFzc3mVErR84ZwibOMgkmhFistaJZBtkdwVrMZB4Vteet7j
VwJXnlPuAhIcpHqGSAgSUQIT48Q2/ol8FHlzx5+n4krQplfWc/xlPnrxOmiA
tlEJOtMqcjSa8tEplY7MLwpKkFXXKxybko8G2g+u2EtTAhe/3iurlPPRtMGg
zEmGEuwfmNs3vDYfrW3bpVWkqQQ1P+XamVN5SBvren7ZrARGt7L+Kd/OQ9mN
wk+OmSiBQ8bDb8kGeWhXXVNeyj4lENNwkHmLctFhtmZtlZsS6G8pqDshn4ui
aq/2PD+oBKLdmaeKF3NQZfXZf1K+SjCdWxScfysH8d/wOlgaqgT+b19iS0IO
elAmzmzOVIJLw/RUiy/Z6D0p2fzDOSVYImcvOTVno7mSZfdVuUpQFa+yUSg7
G5GKJ86bX1SCGwnpRkchG8Vcal16dU0JXliXTZucP4f0c/26vrUrQdNtZkg9
8yyqP9OxjzCnBBduRC1YhaSjcouejYnzSvDyxVFrI4F0xBF88WJqSQlMY+xv
jRSloejM/0wbVyqDkyKfwZaeVGSZt0i3F1aGbaqpDRVyKWj4KnM5haoMpJ/U
u2a3E9GGrguFv92U4VNx7cqO/6LRiqQSp32HlKH/eOjo72PRaNbiulinlzLE
H3FLtOWNRm967ySeDVCGlfqWaYrOUaj09YsAjZPKMLqRkjv/JxzpflkHHnnK
3P9R/3WlvcHo8JqQD729ypDZZnDk0Ll9SEaxu3/puTK0rzs/y7nnjHo3yz+l
vFIGn3tGclEjjkjbr7M55q0y7HH+vJhqaIt4X0oUaI8pw2Tg/kX+/YDKim7b
XVpBhK4N1SulXSywYwP/zp7VROCcp0J/yi4s2LfPeH4tEWxehaVudrLBwWvX
sm02EEF9ZgVr4qgDNvZ3EOaVJQK/wIt0av0B/Gnr/KMjWkQIHSU7lGn74Dw7
y3aODhHC66u1dzj7YsuAontdukQ4k/E7ePdJP1xXvL1cyYAIfy+KORy554/j
+PLjX+0kgqR99vu6M0cxqX8LbPMkQptJoknEpRA8MJ2m4+NDBIGDt43fyxzH
qfzD9NwjRDhE37Ci7/xxPLstWf5HEBGChvgVjiWG4o7SwcXSaCIY5N39ZeN0
Ansci6gX5BChM2lIrep2JNbWfF+vdpEI5Fk92bvSJzH/DNw2LSJCdtpUnG3E
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
gVp+qi4sL3PnJZhfN5cugf4HGGWJ0A==
          "]], 
         LineBox[{{1.830027869657346, 0.08372494504187893}, {
          1.842874705194478, 0.06663945696278073}, {1.8692882306185843`, 
          0.03211264173724772}, {
          1.9221152814667968`, -0.034381259950733746`}, {
          1.9515002049540744`, -0.06821749756640673}}]}, 
        Annotation[#, "Charting`Private`Tag$50164#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 20}, {-0.06821749756640673, 0.08372494504187893}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"phi1''\"", "\"phi2''\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.847616349944755*^9, {3.847616448742136*^9, 3.847616458252432*^9}, 
   3.847616771998564*^9, 3.8476168344740257`*^9, 3.847621509905251*^9, 
   3.8476226687664604`*^9, 3.847622942905468*^9, {3.84762297562466*^9, 
   3.8476229991492643`*^9}, 3.8476230786681943`*^9, 3.847623110780528*^9, {
   3.8476231585603848`*^9, 3.8476231920256376`*^9}, {3.8476232244685793`*^9, 
   3.8476232421314125`*^9}, 3.847710076842549*^9, 3.847710143298047*^9, {
   3.847776828956808*^9, 3.8477768359697037`*^9}, 3.847776913749111*^9, {
   3.8477773544785624`*^9, 3.847777441288918*^9}, 3.847777497648999*^9, 
   3.847777553435197*^9, {3.847777628230981*^9, 3.847777726416288*^9}, {
   3.847777875287149*^9, 3.847777932022113*^9}, 3.847777970692515*^9, 
   3.8477780013090363`*^9, {3.847778048797662*^9, 3.8477780900125*^9}, 
   3.8477782747200613`*^9, {3.8477783264627333`*^9, 3.847778390561885*^9}, 
   3.8477784360923634`*^9, 3.8477791440642033`*^9, 3.847779192583971*^9, {
   3.8477792343713617`*^9, 3.8477792390137243`*^9}},
 CellLabel->
  "Out[1033]=",ExpressionUUID->"563896dd-fe8d-4d66-9271-7792b2c005b7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 7.675000000000001, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 20, 0.025}}, Typeset`size$$ = {
    360., {180., 186.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$50228$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$50228$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{
         $CellContext`pendulum[$CellContext`t$$], 
         $CellContext`expectedTrajectory[$CellContext`t$$], 
         $CellContext`trace[$CellContext`t$$]}, 
        PlotRange -> {{-2, 2}, {-2, 2}}, Axes -> True], 
      "Specifications" :> {{$CellContext`t$$, 0, 20, 0.025, AnimationRate -> 
         1, AnimationRunning -> False, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{407., {215., 222.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.847616349944755*^9, {3.847616448742136*^9, 3.847616458252432*^9}, 
   3.847616771998564*^9, 3.8476168344740257`*^9, 3.847621509905251*^9, 
   3.8476226687664604`*^9, 3.847622942905468*^9, {3.84762297562466*^9, 
   3.8476229991492643`*^9}, 3.8476230786681943`*^9, 3.847623110780528*^9, {
   3.8476231585603848`*^9, 3.8476231920256376`*^9}, {3.8476232244685793`*^9, 
   3.8476232421314125`*^9}, 3.847710076842549*^9, 3.847710143298047*^9, {
   3.847776828956808*^9, 3.8477768359697037`*^9}, 3.847776913749111*^9, {
   3.8477773544785624`*^9, 3.847777441288918*^9}, 3.847777497648999*^9, 
   3.847777553435197*^9, {3.847777628230981*^9, 3.847777726416288*^9}, {
   3.847777875287149*^9, 3.847777932022113*^9}, 3.847777970692515*^9, 
   3.8477780013090363`*^9, {3.847778048797662*^9, 3.8477780900125*^9}, 
   3.8477782747200613`*^9, {3.8477783264627333`*^9, 3.847778390561885*^9}, 
   3.8477784360923634`*^9, 3.8477791440642033`*^9, 3.847779192583971*^9, {
   3.8477792343713617`*^9, 3.847779239053053*^9}},
 CellLabel->
  "Out[1036]=",ExpressionUUID->"e9881ff0-bdd9-4a91-8e9e-19c84c882ed0"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1848, 1016},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 247, 4, 31, "Input",ExpressionUUID->"b6c01683-26b1-4482-bd96-a2bcc81379be"],
Cell[808, 26, 1420, 34, 262, "Input",ExpressionUUID->"61e0b5f5-8fb9-49e3-85ab-de9cdce88a15"],
Cell[CellGroupData[{
Cell[2253, 64, 264, 4, 55, "Subsection",ExpressionUUID->"0412f1ee-4917-4a1f-b541-60d0aa0214f1"],
Cell[2520, 70, 1385, 38, 60, "Text",ExpressionUUID->"9381f817-5ec0-4354-97bb-979edcebd397"],
Cell[CellGroupData[{
Cell[3930, 112, 10359, 272, 606, "Input",ExpressionUUID->"be403696-b516-48f0-a659-99797dce952d"],
Cell[14292, 386, 2201, 55, 77, "Output",ExpressionUUID->"cc4320ad-b370-42d4-8045-e0b7be1cbdc8"],
Cell[16496, 443, 2763, 69, 73, "Output",ExpressionUUID->"b40de057-b2fd-4398-8dcb-32f2ae2c0319"],
Cell[19262, 514, 4870, 124, 62, "Output",ExpressionUUID->"765cee89-3a61-4b86-8fe7-78d6128cc1ae"]
}, Open  ]],
Cell[24147, 641, 536, 8, 36, "Text",ExpressionUUID->"4fa597a2-9044-440a-bfc1-809a88afbc62"],
Cell[CellGroupData[{
Cell[24708, 653, 7245, 168, 669, "Input",ExpressionUUID->"3b850e55-a280-4a92-8e37-c6146f273420"],
Cell[31956, 823, 46408, 818, 241, "Output",ExpressionUUID->"3729b3f5-5aee-49b0-ab96-6fb73af5c7b1"],
Cell[78367, 1643, 128179, 2159, 234, "Output",ExpressionUUID->"d6ac6a19-fec8-4d0b-916c-8305f25c4c1c"],
Cell[206549, 3804, 3341, 59, 456, "Output",ExpressionUUID->"5bb62062-d84e-4110-a3d2-dd6f989201b8"]
}, Open  ]],
Cell[209905, 3866, 1897, 27, 47, "Input",ExpressionUUID->"64b16b53-2538-4b79-b61f-9f198266a113"],
Cell[211805, 3895, 203, 4, 31, "Input",ExpressionUUID->"66d2d29c-3c19-45df-bfa8-74771adc2aca"],
Cell[212011, 3901, 479, 7, 31, "Input",ExpressionUUID->"c80e4cea-7410-4827-8f5d-c06bcbd9a776"],
Cell[212493, 3910, 145, 3, 31, "Input",ExpressionUUID->"361c620d-c349-478d-b532-13ac861dd650"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212675, 3918, 442, 6, 55, "Subsection",ExpressionUUID->"0c1cbe86-6285-4eca-81b0-5013fa2d89b9"],
Cell[213120, 3926, 885, 22, 60, "Text",ExpressionUUID->"3bb331ca-6b41-4395-b8d5-8e920c5c527b"],
Cell[214008, 3950, 5069, 109, 347, "Input",ExpressionUUID->"5f481c84-a3ff-4b2a-b001-335ad358d289"],
Cell[219080, 4061, 117350, 2756, 174, InheritFromParent,ExpressionUUID->"1725153d-7d4d-4401-a2bd-2889f75f7713"],
Cell[336433, 6819, 559, 8, 36, "Text",ExpressionUUID->"80c3c432-8dae-4529-8a60-281b82a006a2"],
Cell[CellGroupData[{
Cell[337017, 6831, 10957, 243, 853, "Input",ExpressionUUID->"2a321c77-db4c-4e0e-9fd0-891018e37038"],
Cell[347977, 7076, 50791, 892, 236, "Output",ExpressionUUID->"ee39c2f1-7720-4a99-92b1-9dc7e9e143b9"],
Cell[398771, 7970, 50768, 892, 237, "Output",ExpressionUUID->"39c0824a-0494-4ea6-9d91-714851b58a7d"],
Cell[449542, 8864, 2560, 49, 456, "Output",ExpressionUUID->"8295c4a8-d178-4259-a86f-c1b1ece664c0"]
}, Open  ]],
Cell[452117, 8916, 618, 9, 36, "Text",ExpressionUUID->"7bf8e818-f799-4032-bece-3dfb756da2cf"],
Cell[CellGroupData[{
Cell[452760, 8929, 13735, 318, 1267, "Input",ExpressionUUID->"91de1b7d-111f-4d94-8333-0fa7521badf5"],
Cell[466498, 9249, 62837, 1089, 242, "Output",ExpressionUUID->"e447d071-6c9e-4e44-bd03-6500d12f0089"],
Cell[529338, 10340, 54918, 964, 228, "Output",ExpressionUUID->"563896dd-fe8d-4d66-9271-7792b2c005b7"],
Cell[584259, 11306, 3242, 59, 489, "Output",ExpressionUUID->"e9881ff0-bdd9-4a91-8e9e-19c84c882ed0"]
}, Open  ]]
}, Open  ]]
}
]
*)

